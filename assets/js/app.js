if(angular.module("jumplink.cms.bootstrap.attachment",["jumplink.cms.attachment"]).directive("jlAttachmentBootstrap",["$compile","$window","mediumOptions","AttachmentService",function($compile,$window,mediumOptions,AttachmentService){return{restrict:"E",templateUrl:"/views/modern/attachment.bootstrap.jade",scope:{attachment:"=",attachmentIndex:"=",parent:"=",path:"=",authenticated:"=",destroy:"=",centerImage:"="},link:function($scope,$element,$attrs){console.log("[jlAttachmentBootstrap.link]",$scope)},controller:["$scope","AttachmentService",function($scope,AttachmentService){$scope.open=AttachmentService.open}]}}]),angular.module("jumplink.cms.attachment",["sails.io"]).service("AttachmentService",["moment","$sailsSocket","$async","$log","$window",function(moment,$sailsSocket,$async,$log,$window){var open=function(url,target){$window.open(url,target)},destroyLocally=function(blogPosts,postIndex,attachmentIndex,cb){return blogPosts[postIndex].attachments.length>0&&blogPosts[postIndex].attachments.splice(attachmentIndex,1),cb(null,blogPosts,postIndex,attachmentIndex)},destroyExternally=function(blogPosts,postIndex,attachmentIndex,cb){$sailsSocket.put("/blog/destroyAttachment",{blogPostID:blogPosts[postIndex].id,attachmentUploadedAs:blogPosts[postIndex].attachments[attachmentIndex].uploadedAs}).success(function(data,status,headers,config){$log.debug(null,data,status,headers,config),cb()}).error(function(data,status,headers,config){$log.error(data,status,headers,config),cb("error",data,status,headers,config)})},destroy=function(blogPosts,post,attachmentIndex,cb){var postIndex=blogPosts.indexOf(post);return $log.debug("[BlogService.destroy]",blogPosts[postIndex],attachmentIndex),destroyExternally(blogPosts,postIndex,attachmentIndex,function(err,data,status,headers,config){return err?cb(err,data,status,headers,config):destroyLocally(blogPosts,postIndex,attachmentIndex,cb)})};return{open:open,destroyLocally:destroyLocally,destroyExternally:destroyExternally,destroy:destroy}}]),angular.module("jumplink.cms.admin",["sails.io"]).directive("adminbar",["$compile","$window","$sailsSocket","$state",function($compile,$window,$sailsSocket,$state){return{restrict:"E",templateUrl:"/views/modern/adminbar.jade",scope:{upload:"=?",download:"=?",toogleHtml:"=?",refresh:"=?",save:"=?",add:"=?",addDropdown:"=?",addDropdownActions:"=?",adminSettingDropdown:"=?",authenticated:"=?",allowActions:"=?"},link:function($scope,$element,$attrs){$scope.goToState=$state.go,angular.isUndefined($scope.adminSettingDropdown)&&($scope.adminSettingDropdown=[{text:'<i class="fa fa-list"></i>&nbsp;Übersicht',click:"goToState('layout.administration')"},{text:'<i class="fa fa-users"></i>&nbsp;Benutzer',click:"goToState('layout.users')"},{text:'<i class="fa fa-sign-out"></i>&nbsp;Abmelden',click:"$root.logout()"}])}}}]),angular.module("ngAsync",[]).service("$async",function(){return async.objectMap=function(obj,func,cb){var i,arr=[],keys=Object.keys(obj);for(i=0;i<keys.length;i+=1){var wrapper={};wrapper[keys[i]]=obj[keys[i]],arr[i]=wrapper}this.map(arr,func,function(err,data){if(err)return cb(err);var res={};for(i=0;i<data.length;i+=1)res[keys[i]]=data[i];return cb(err,res)})},async}),angular.module("jumplink.cms.bootstrap.blog",["jumplink.cms.blog","mgcrea.ngStrap","angular-medium-editor","angularFileUpload","ngFocus"]).service("BlogBootstrapService",["$log","focus","BlogService","$modal","FileUploader",function($log,focus,BlogService,$modal,FileUploader){var editModal=null,typeModal=null,page=null,openTypeChooserModal=function(blogPost){typeModal.$scope.blogPost=blogPost,typeModal.$promise.then(typeModal.show)},setModals=function($scope,fileOptions,pageString,onFileCompleteCallback){angular.isString(page)||(page=pageString),editModal=$modal({title:"Blogpost bearbeiten",templateUrl:"/views/modern/blog/editmodal.bootstrap.jade",show:!1}),editModal.$scope.ok=!1,editModal.$scope.accept=function(hide){editModal.$scope.ok=!0,hide()},editModal.$scope.abort=function(hide){editModal.$scope.ok=!1,hide()},angular.isUndefined(fileOptions)&&(fileOptions={path:"assets/files/blog",thumbnail:{width:300,path:"assets/files/blog"},rescrop:{width:1200,cropwidth:1200,cropheight:1200}});var uploadOptions={url:"blog/upload",removeAfterUpload:!0,headers:{options:JSON.stringify(fileOptions)}};return editModal.$scope.uploader=new FileUploader(uploadOptions),editModal.$scope.openTypeChooserModal=openTypeChooserModal,angular.isFunction(onFileCompleteCallback)&&($scope.uploader.onComplete=onFileCompleteCallback),editModal.$scope.uploader.onCompleteItem=function(fileItem,response,status,headers){$log.debug("[BlogBootstrapService.onCompleteItem] fileItem",fileItem,"response",response),angular.isArray(fileItem.blogPost.attachments)||(fileItem.blogPost.attachments=[]);for(var i=0;i<response.files.length;i++)fileItem.blogPost.attachments.push(response.files[i])},editModal.$scope.uploader.onProgressItem=function(fileItem,progress){$log.debug("[BlogBootstrapService.onProgressItem]",fileItem,progress)},editModal.$scope.upload=function(fileItem,blogPost){fileItem.blogPost=blogPost,fileItem.upload()},typeModal=$modal({title:"Typ wählen",templateUrl:"/views/modern/blog/typechoosermodal.bootstrap.jade",show:!1}),typeModal.$scope.chooseType=BlogService.chooseType,editModal.$scope.$on("modal.hide.before",function(modalEvent,editModal){return $log.debug("edit closed",editModal.$scope.blogPost,editModal),editModal.$scope.ok?BlogService.validate(editModal.$scope.blogPost,null,editModal.$scope.callback):void(editModal.$scope.callback&&editModal.$scope.callback("discarded",editModal.$scope.blogPost))}),getModals()},getEditModal=function(){return editModal},getTypeModal=function(){return typeModal},getModals=function(){return{editModal:getEditModal(),typeModal:getTypeModal()}},edit=function(blogPost,cb){$log.debug("[BlogService.edit]",blogPost),editModal.$scope.blogPost=blogPost,editModal.$scope.callback=cb,editModal.$scope.ok=!1,focus("blogposttitle"),editModal.$promise.then(editModal.show)},createEdit=function(blogPosts,blogPost,cb){blogPost=BlogService.create(blogPost),edit(blogPost,cb)};return{edit:edit,update:edit,createEdit:createEdit,setModals:setModals,openTypeChooserModal:openTypeChooserModal}}]),angular.module("jumplink.cms.blog",["jumplink.cms.attachment","angularMoment","ngAsync","sails.io"]).service("BlogService",["moment","$sailsSocket","$async","$log","$filter","AttachmentService",function(moment,$sailsSocket,$async,$log,$filter,AttachmentService){var types=["news","other"],deleteAttachment=(AttachmentService.destroyLocally,AttachmentService.destroyExternally,AttachmentService.destroy),validate=function(blogPost,page,callback){return blogPost.title?fix(blogPost,page,callback):angular.isFunction(callback)?callback("Title not set",blogPost):null},chooseType=function(blogPost,type){blogPost.type=type},removeFromClient=function(blogPosts,blogPost,callback){var index=blogPosts.indexOf(blogPost);index>-1?(blogPosts.splice(index,1),angular.isFunction(callback)&&callback(null,blogPosts)):angular.isFunction(callback)&&callback("no blogPost on client site found to remove",blogPosts)},destroy=function(blogPosts,blogPost,callback){blogPost.id?($log.debug("[jumplink.cms.blog.BlogService.destroy]",blogPost),$sailsSocket["delete"]("/blog/"+blogPost.id).success(function(users,status,headers,config){removeFromClient(blogPosts,blogPost,callback)})):removeFromClient(blogPosts,blogPost,callback)},sort=function(blogPosts){var reverse=!0;return $filter("orderBy")(blogPosts,"createdAt",reverse)},transform=function(blogPosts){return blogPosts=sort(blogPosts)},append=function(blogPosts,moreBlogPosts,callback){return blogPosts.push.apply(blogPosts,moreBlogPosts),blogPosts=transform(blogPosts),angular.isFunction(callback)?callback(null,blogPosts):blogPosts},prepent=function(blogPosts,blogPost,callback){return blogPosts.unshift(blogPost),blogPosts=transform(blogPosts),angular.isFunction(callback)?callback(null,blogPosts):blogPosts},create=function(data){return data&&data.createdAt||(data.createdAt=moment()),data&&data.title||(data.title=""),data&&data.content||(data.content=""),data&&data.author||(data.author=""),data&&data.page||callback("Page not set."),data&&data.type||(data.type=types[0]),$log.debug("[BlogService,create]",data),data},fix=function(object,page,callback){return angular.isUndefined(object.page)&&null!==page&&(object.page=page),object.name&&""!==object.name||(object.name=object.title.toLowerCase().replace(/[^a-z]+/g,"")),angular.isFunction(callback)?callback(null,object):object},fixEach=function(objects,page,callback){for(var i=objects.length-1;i>=0;i--)objects[i]=fix(objects[i],page);return angular.isFunction(callback)?callback(null,objects):objects},refresh=function(blogPosts,callback){return $log.debug("[jumplink.cms.blog.BlogService.refresh]"),blogPosts=transform(blogPosts),angular.isFunction(callback)?callback(null,blogPosts):blogPosts},saveOne=function(blogPosts,blogPost,index,page,callback){var errors=["BlogService: Can't save blogPost.","BlogService: Can't save blogPost, blogPost to update not found.","BlogService: Can't save blogPost, parameters undefind."];return $log.debug("[BlogService.saveOne]",blogPost),angular.isDefined(blogPost)&&angular.isDefined(callback)?(blogPost=fix(blogPost,page),void(angular.isUndefined(blogPost.id)?$sailsSocket.post("/blog",blogPost).success(function(data,status,headers,config){angular.isArray(data)&&(data=data[0]),callback(null,data)}).error(function(data,status,headers,config){return angular.isArray(data)&&(data=data[0]),$log.error(data,status,headers,config),callback(errors[0])}):$sailsSocket.put("/blog/"+blogPost.id,blogPost).success(function(data,status,headers,config){return angular.isArray(data)&&(data=data[0]),callback(null,data)}).error(function(data,status,headers,config){return $log.error(data,status,headers,config),callback(errors[0])}))):callback(errors[2])},saveBlocks=function(blogPosts,page,callback){var errors=["[BlogService.saveBlocks] Can't save blogPosts, parameters undefind."];if(angular.isDefined(blogPosts)&&angular.isDefined(callback))$async.map(blogPosts,function(blogPost,callback){saveOne(blogPosts,blogPost,null,page,callback)},function(err,blogPostsArray){return err?callback(err):(blogPosts=transform(blogPosts),callback(null,blogPosts))});else if($log.error(errors[0]),angular.isFunction(callback))return callback(errors[0])},save=function(blogPosts,blogPost,index,page,callback){angular.isDefined(blogPost)?saveOne(blogPosts,blogPost,index,page,callback):saveBlocks(blogPosts,page,callback)},find=function(page,limit,skip,callback){return $sailsSocket.put("/blog/find",{page:page,limit:limit,skip:skip}).then(function(data){return data.data=transform(data.data),angular.isFunction(callback)?callback(null,data.data):data.data},function(resp){return $log.error("Error on find "+page,resp),angular.isFunction(callback)?callback(resp):null})},count=function(page,limit,skip,callback){return $sailsSocket.put("/blog/count",{page:page}).then(function(data){return angular.isFunction(callback)?callback(null,data.data.count):data.data.count},function(resp){return $log.error("Error on resolve "+page,resp),angular.isFunction(callback)?callback(resp):null})},subscribe=function(){$sailsSocket.subscribe("blog",function(msg){switch($log.debug(msg),msg.verb){case"updated":$rootScope.authenticated&&$rootScope.pop("success","Ein Blogpost wurde aktualisiert",msg.data.title),findEvent(msg.id,function(error,blogPost,blogPostBlock,index){error?$log.debug(error):blogPost=msg.data,$scope.refresh()});break;case"created":$rootScope.authenticated&&$rootScope.pop("success","Ein Blogpost wurde erstellt",msg.data.title),$scope.blogPosts.push(msg.data),$scope.refresh();break;case"removedFrom":$rootScope.authenticated&&$rootScope.pop("success","Ein Blogpost wurde entfernt",msg.data.title),findEvent(msg.id,function(error,blogPost,blogPostBlock,index){error?$log.debug(error):BlogService.removeFromClient($scope.blogPosts,blogPost,blogPostBlock)});break;case"destroyed":$rootScope.authenticated&&$rootScope.pop("success","Ein Blogpost wurde gelöscht",msg.data.title),findEvent(msg.id,function(error,blogPost,blogPostBlock,index){return error?($log.debug(error),error):void BlogService.removeFromClient($scope.blogPosts,blogPost,blogPostBlock)});break;case"addedTo":$rootScope.authenticated&&$rootScope.pop("success","Ein Blogpost wurde hinzugefügt",msg.data.title)}})};return{validate:validate,subscribe:subscribe,append:append,prepent:prepent,sort:sort,transform:transform,saveOne:saveOne,saveBlocks:saveBlocks,save:save,fixEach:fixEach,find:find,resolve:find,count:count,refresh:refresh,chooseType:chooseType,removeFromClient:removeFromClient,remove:destroy,destroy:destroy,deleteAttachment:deleteAttachment,destroyAttachment:deleteAttachment,create:create}}]),angular.module("jumplink.cms.browser",[]).directive("jlBrowser",["$compile","$window",function($compile,$window){return{restrict:"E",templateUrl:"/views/modern/browser.bootstrap.jade",scope:{force:"="},link:function($scope,$element,$attrs){}}}]),angular.module("jumplink.cms.config",["sails.io"]).service("ConfigService",["$sailsSocket","$filter","$log",function($sailsSocket,$filter,$log){var resolve=function(page){return $sailsSocket.get("/config/find").then(function(data){return data.data},function(resp){$log.error("Error on resolve "+page,resp)})};return{resolve:resolve}}]),Date.now||(Date.now=function(){return(new Date).getTime()}),function(){"use strict";for(var vendors=["webkit","moz"],i=0;i<vendors.length&&!window.requestAnimationFrame;++i){var vp=vendors[i];window.requestAnimationFrame=window[vp+"RequestAnimationFrame"],window.cancelAnimationFrame=window[vp+"CancelAnimationFrame"]||window[vp+"CancelRequestAnimationFrame"]}if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var lastTime=0;window.requestAnimationFrame=function(callback){var now=Date.now(),nextTime=Math.max(lastTime+16,now);return setTimeout(function(){callback(lastTime=nextTime)},nextTime-now)},window.cancelAnimationFrame=clearTimeout}}(),angular.module("jumplink.cms.bootstrap.content",["jumplink.cms.content"]).service("ContentBootstrapService",["$log","$async","ImportExportBootstrapService","UtilityService","ContentService","SortableService",function($log,$async,ImportExportBootstrapService,UtilityService,ContentService,SortableService){var modals=null,host=null,setHost=function(newHost){host=newHost},setupImportModal=function($scope,onImportFinsih){var fileOptions={},onCompleteFile=function(err,files){$log.debug("[ContentBootstrapService.onCompleteFile]",files);for(var data=[],i=0;i<files.length;i++)data=data.concat(files[i].data);ImportExportBootstrapService.setImports(data,{identifierKey:"name",descriptionKey:"title"})},onImportStart=function(imports,next){$log.debug("[ContentBootstrapService.onImportStart]",host),$async.map(imports,function(item,callback){item.importOptions.doImport===!0?ContentService.updateOrCreateByHostByTitleAndPage(host,item,callback):callback()},function(err,results){$log.debug("[ContentBootstrapService.onImportStart] done",err,results),results=SortableService.sort(results),next(err,results)})},onAbort=function(imports,next){$log.debug("[ContentBootstrapService.onAbort]"),next()};modals=ImportExportBootstrapService.setModals($scope,fileOptions,onCompleteFile,onImportStart,onAbort,onImportFinsih)};return{setHost:setHost,setupImportModal:setupImportModal,showImportModal:ImportExportBootstrapService.show}}]),angular.module("jumplink.cms.content",["mgcrea.ngStrap","angular-medium-editor","ui.ace","sails.io","jumplink.cms.sortable","ngFocus","jumplink.cms.utilities"]).service("ContentService",["$rootScope","$log","$sailsSocket","$filter","$modal","$download","JLSailsService","SortableService","UtilityService","focus","$async",function($rootScope,$log,$sailsSocket,$filter,$modal,$download,JLSailsService,SortableService,UtilityService,focus,$async){var showHtml=!1,editModal=null,getShowHtml=function(){return showHtml},setEditModal=function($scope){return editModal=$modal({title:"Inhaltsblock bearbeiten",templateUrl:"/views/modern/contentmodal.jade",show:!1}),editModal.$scope.ok=!1,editModal.$scope.accept=function(hide){editModal.$scope.ok=!0,hide()},editModal.$scope.abort=function(hide){editModal.$scope.ok=!1,hide()},editModal.$scope.changeName=!1,editModal.$scope.$watch("content.title",function(newValue,oldValue){editModal.$scope.changeName&&angular.isDefined(editModal.$scope.content)&&(editModal.$scope.content.name=generateName(newValue))}),editModal.$scope.$on("modal.hide.before",function(event,editModal){return editModal.$scope.changeName=!1,editModal.$scope.ok?validateContent(editModal.$scope.content,editModal.$scope.callback):angular.isFunction(editModal.$scope.callback)?editModal.$scope.callback("discarded",editModal.$scope.content):void 0}),getEditModal()},getEditModal=function(){return editModal},subscribe=function(){$sailsSocket.subscribe("content",function(msg){switch($log.debug("Content event!",msg),msg.verb){case"updated":$rootScope.authenticated&&$rootScope.pop("success","Seite wurde aktualisiert",msg.id)}})},toogleShowHtml=function(contents,callback){return showHtml=!showHtml,showHtml&&contents&&(contents=beautifyEach(contents)),angular.isFunction(callback)?callback(null,showHtml):showHtml},beautify=function(content,callback){return content.content=html_beautify(content.content),angular.isFunction(callback)?callback(null,content):content},beautifyEach=function(contents,callback){for(var i=contents.length-1;i>=0;i--)contents[i].content=beautify(contents[i].content);return angular.isFunction(callback)?callback(null,contents):contents},getByName=function(contents,name){var index=UtilityService.findKeyValue(contents,"name",name);return index>-1?contents[index]:null},create=function(data){return data&&data.content||(data.content=""),data&&data.title||(data.title=""),data&&data.name||(data.name=""),data&&data.type||(data.type="dynamic"),data&&data.page||$log.error("[ContentService] Page not set."),data},append=function(contents,content,callback){SortableService.append(contents,content,callback,!0,"name")},createEdit=function(contents,page,callback){var data=create({page:page});edit(data,callback,!0)},swap=function(contents,index_1,index_2,callback){return SortableService.swap(contents,index_1,index_2,callback)},moveForward=function(index,contents,callback){return SortableService.moveForward(index,contents,callback)},moveBackward=function(index,contents,callback){return SortableService.moveBackward(index,contents,callback)},validateContent=function(content,callback){return content.title?fix(content,callback):angular.isFunction(callback)?callback("Title not set",content):null},edit=function(content,callback,changeName){$log.debug("edit",content),editModal.$scope.content=content,editModal.$scope.callback=callback,changeName?editModal.$scope.changeName=changeName:editModal.$scope.changeName=!1,focus("contentedittitle"),editModal.$promise.then(editModal.show)},removeFromClient=function(contents,index,content,callback){return SortableService.remove(index,contents,callback)},remove=function(contents,index,content,page,callback){var errors=["Content konnte nicht gelöscht werden."];return("undefined"==typeof index||null===index)&&(index=contents.indexOf(content)),contents=SortableService.remove(contents,index,content),content.id?($log.debug("remove from server, too",content),void $sailsSocket["delete"]("/content/"+content.id+"?page="+page,{id:content.id,page:page}).success(function(data,status,headers,config){return angular.isFunction(callback)?callback(null,contents):contents}).error(function(data,status,headers,config){return $log.error(errors[0],data),angular.isFunction(callback)?callback(data):data})):angular.isFunction(callback)?callback(null,contents):contents},refresh=function(contents,callback){fixEach(contents,function(err,contents){return err?($log.error(err),angular.isFunction(callback)?callback(err):err):void beautifyEach(contents,function(err,contents){return err?($log.error(err),angular.isFunction(callback)?callback(err):err):angular.isFunction(callback)?callback(null,contents):contents})})},generateName=function(title){var name="";return title&&""!==title&&(name=title.toLowerCase().replace(/[^a-z1-9]+/g,""),$log.debug("set content.name to",name)),name},fix=function(content,callback){return angular.isDefined(content)?((angular.isUndefined(content.name)||""===content.name||null===content.name)&&(content.name=generateName(content.title)),angular.isNumber(content.position)||(content.position=0),content.type&&""!==content.type||($log.warn("Fix content type not set, set it to dynamic"),content.type="fix"),angular.isFunction(callback)?callback(null,content):content):angular.isFunction(callback)?callback("content not set"):null},fixEach=function(contents,callback){for(var i=contents.length-1;i>=0;i--)contents[i]=fix(contents[i]);return angular.isFunction(callback)?callback(null,contents):contents},saveOne=function(content,page,callback){var errors=["Inhalt konnte nicht gespeichert werden"];content.page=page,fix(content,function(err,content){return err?angular.isFunction(callback)?callback(err):err:void $sailsSocket.put("/content/replace",content).success(function(data,status,headers,config){return null!==data&&"undefined"!=typeof data?(content=data,angular.isFunction(callback)?callback(null,content):content):($log.error(errors[0]),angular.isFunction(callback)?callback(errors[0]):errors[0])}).error(function(data,status,headers,config){return $log.error(errors[0],data),angular.isFunction(callback)?callback(data):data})})},save=function(contents,page,callback){var errors=["Seite konnte nicht gespeichert werden"];fixEach(contents,function(err,contents){return err?angular.isFunction(callback)?callback(err):err:$sailsSocket.put("/content/replaceall",{contents:contents,page:page}).success(function(data,status,headers,config){return null!==data&&"undefined"!=typeof data?(contents=$filter("orderBy")(data,"position"),angular.isFunction(callback)?callback(null,contents):contents):($log.error(errors[0]),angular.isFunction(callback)?callback(errors[0]):errors[0])}).error(function(data,status,headers,config){$log.error(errors[0],data),angular.isFunction(callback)&&callback(data)})})},saveParallel=function(page,logger,options,obj,callback){$async.parallel(obj,function(err,results){return err?($log.error("Error: On save content!",err),logger("error","Seiteninhalt konnte nichtgespeichert werden",err),angular.isFunction(callback)?callback(err):err):(options.applyResults&&(options.scope=angular.extend(options.scope,results)),logger("success","Seiteninhalt wurde gespeichert",""),angular.isFunction(callback)?callback(null,results):results)})},findOne=function(page,name,type,callback,next){var errors=["Error: On trying to find one with page: "+page+", name: "+name,"request has more than one results"],query={page:page,name:name},url="/content/find";return angular.isDefined(type)&&null!==type&&(query.type=type),$sailsSocket.put(url,query).then(function(data){return angular.isUndefined(data)||angular.isUndefined(data.data)?null:(data.data instanceof Array&&(data.data=data.data[0],$log.error(errors[1])),next&&(data.data=next(data.data)),angular.isFunction(callback)?callback(null,data.data):data.data)},function(resp){return $log.error(errors[0],resp),angular.isFunction(callback)?callback(errors[0],resp):resp})},findAll=function(page,type,callback,next){var errors=["Error: On trying to find all with page: "+page+" and type: "+type,"Warn: On trying to find all "+page+" contents! Not found, content is empty!"],query={},url="/content/findall";return angular.isDefined(page)&&null!==page&&(query.page=page),angular.isDefined(type)&&null!==type&&(query.type=type),$sailsSocket.put(url,query).then(function(data){return angular.isUndefined(data)||angular.isUndefined(data.data)?($log.warn(errors[1]),null):(data.data=$filter("orderBy")(data.data,"position"),next&&(data.data=next(data.data)),angular.isFunction(callback)?void callback(null,data.data):data.data)},function(resp){return $log.error(errors[0],resp),angular.isFunction(callback)?callback(errors[0],resp):resp})},findByHost=function(query,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Content/findByHost",query,options,callback)},exportByHost=function(host,download,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Content/exportByHost",{host:host},options,function(err,data){return $log.debug("[ContentService.exportByHost]",err,data),err?(download&&$download(JSON.stringify(data),"error.txt","text/plain"),callback(err)):(download&&$download(JSON.stringify(data),"content.json","text/json"),callback(err,data))})},updateOrCreateByHostByTitleAndPage=function(host,content,callback){$log.debug("[contentsService.updateOrCreateByHostByTitleAndPage]",host,content);var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/Content/updateOrCreateByHostByTitleAndPage",{host:host,content:content},options,callback)},findAllWithImage=function(page,type,callback,next){var errors=["Error: On trying to find all with page: "+page+" and type: "+type,"Warn: On trying to find all "+page+" contents! Not found, content is empty!"],query={page:page},url="/content/findAllWithImage?page="+page;return type&&(query.type=type,url=url+"&type="+type),$sailsSocket.get(url,query).then(function(data){return angular.isUndefined(data)||angular.isUndefined(data.data)?($log.warn(errors[1]),null):(data.data.contents=$filter("orderBy")(data.data.contents,"position"),data.data.images=$filter("orderBy")(data.data.images,"position"),next&&(data.data=next(data.data)),angular.isFunction(callback)?callback(null,data.data):data.data)},function(resp){return $log.error(errors[0],resp),angular.isFunction(callback)?callback(errors[0],resp):resp})},find=function(page,name,type,callback,next){return angular.isDefined(name)?findOne(page,name,type,next):findAll(page,type,callback,next)};return{subscribe:subscribe,setEditModal:setEditModal,getShowHtml:getShowHtml,toogleShowHtml:toogleShowHtml,beautify:beautify,beautifyEach:beautifyEach,create:create,createEdit:createEdit,append:append,swap:swap,moveForward:moveForward,moveBackward:moveBackward,edit:edit,removeFromClient:removeFromClient,remove:remove,refresh:refresh,fix:fix,fixEach:fixEach,save:save,saveOne:saveOne,saveParallel:saveParallel,find:find,resolve:find,findOne:findOne,resolveOne:findOne,findAll:findAll,resolveAll:findAll,findByHost:findByHost,exportByHost:exportByHost,updateOrCreateByHostByTitleAndPage:updateOrCreateByHostByTitleAndPage,findAllWithImage:findAllWithImage,resolveAllWithImage:findAllWithImage,getByName:getByName}}]),angular.module("jumplink.cms.content.medium",["jumplink.cms.content","angular-medium-editor"]).value("mediumOptions",{buttonLabels:"fontawesome",toolbar:{buttons:["bold","italic","underline","anchor","h2","h3","h4","quote","orderedlist","unorderedlist"]}}).service("ContentMediumService",["$rootScope","$log","$sailsSocket","$filter","$modal","SortableService","UtilityService","focus",function($rootScope,$log,$sailsSocket,$filter,$modal,SortableService,UtilityService,focus){var Imager=function(){this.button=document.createElement("button"),this.button.className="medium-editor-action",this.button.innerText="Image",this.button.innerHTML='<i class="fa fa-picture-o"></i>',this.button.onclick=this.onClick.bind(this)};return Imager.prototype.onClick=function(){this.classApplier.toggleSelection()},Imager.prototype.getButton=function(){return this.button},Imager.prototype.checkState=function(node){"MARK"===node.tagName&&this.button.classList.add("medium-editor-button-active")},{Imager:Imager}}]).directive("jlContent",["$compile","$window","mediumOptions","ContentMediumService",function($compile,$window,mediumOptions,ContentMediumService){return{restrict:"E",templateUrl:"/views/modern/content.jade",scope:{authenticated:"=",html:"=",content:"=?",mediumOptions:"=?",mediumBindOptions:"=?"},link:function($scope,$element,$attrs){angular.isUndefined($scope.mediumOptions)&&($scope.mediumOptions=mediumOptions),angular.isUndefined($scope.mediumBindOptions)&&($scope.mediumBindOptions={extensions:{image:new ContentMediumService.Imager}})}}}]).directive("jlContentBlocks",["$compile","$window","mediumOptions","ContentMediumService","SubnavigationService","HistoryService",function($compile,$window,mediumOptions,ContentMediumService,SubnavigationService,HistoryService){return{restrict:"E",templateUrl:"/views/modern/contentBlocks.jade",scope:{authenticated:"=",html:"=",contents:"=",navs:"=?",afterRefresh:"=?",afterSave:"=?",afterRemove:"=?",afterEdit:"=?",afterAdd:"=?",subnavigation:"=?",afterSaveNav:"=?",afterRemoveNav:"=?",afterEditNav:"=?",afterAddNav:"=?",logger:"=",page:"=?",mediumOptions:"=?",mediumBindOptions:"=?"},link:function($scope,$element,$attrs){},controller:["$rootScope","$scope","ContentService","$log","$state",function($rootScope,$scope,ContentService,$log,$state){ContentService.setEditModal($scope),SubnavigationService.setEditModal($scope),$scope.goTo=HistoryService.goToHashPosition,ContentService.subscribe(),SubnavigationService.subscribe(),angular.isUndefined($scope.page)&&($scope.page=$state.current.name),angular.isUndefined($scope.subnavigation)&&($scope.subnavigation=!1),angular.isUndefined($scope.afterRefresh)&&($scope.afterRefresh=function(err,result){return err?$scope.logger("error","Inhaltsblock wurde nicht erneuert!",err):void $scope.logger("success","Inhaltsblock erneuert!","")}),angular.isUndefined($scope.afterSave)&&($scope.afterSave=function(err,result){return err?$scope.logger("error","Inhaltsblock wurde nicht gespeichert!",err):void $scope.logger("success","Inhaltsblock gespeichert!",result.title)}),angular.isUndefined($scope.afterRemove)&&($scope.afterRemove=function(err,result){return err?$scope.logger("error","Inhaltsblock wurde nicht entfernt!",err):void $scope.logger("success","Inhaltsblock entfernt!",result.title)}),angular.isUndefined($scope.afterEdit)&&($scope.afterEdit=function(err,result){return err?$scope.logger("error","Inhaltsblock wurde nicht bearbeitet!",err):void $scope.logger("success","Inhaltsblock bearbeitet!",result.title)}),angular.isUndefined($scope.afterAdd)&&($scope.afterAdd=function(err,result){return err?$scope.logger("error","Inhaltsblock wurde nicht hinzugefügt!",err):void $scope.logger("success","Inhaltsblock hinzugefügt!",result.title)}),angular.isUndefined($scope.afterSaveNav)&&($scope.afterSaveNav=function(err,result){return err?$scope.logger("error","Navigation wurde nicht gespeichert!",err):void $scope.logger("success","Navigation gespeichert!",result.title)}),$scope.add=function(){return $scope.authenticated?void ContentService.createEdit($scope.contents,$scope.page,function(err,content){return err?$scope.afterAdd(err):void ContentService.append($scope.contents,content,$scope.afterAdd)}):!1},$scope.moveForward=function(index,content){return $scope.authenticated?void SortableService.moveForward(index,$scope.contents,function(err,contents){return err?($log.error("Error: On move content forward!",err),err):void($scope.contents=contents)}):!1},$scope.moveBackward=function(index,content){return $scope.authenticated?void SortableService.moveBackward(index,$scope.contents,function(err,contents){return err?($log.error("Error: On move content backward!",err),err):void($scope.contents=contents)}):!1},$scope.edit=function(index,content){return $scope.authenticated?void ContentService.edit(content,$scope.afterEdit):!1},$scope.remove=function(index,content){return $scope.authenticated?void ContentService.remove($scope.contents,index,content,$scope.page,$scope.afterRemove):!1},$scope.refresh=function(){ContentService.refresh($scope.contents,$scope.afterRefresh)},$scope.toggleHtml=function(index,content){content.html=content.html!==!0},$scope.save=function(){return $scope.authenticated?(ContentService.save($scope.contents,$scope.page,$scope.afterSave),
void($scope.subnavigation&&SubnavigationService.save($scope.navs,$scope.page,$scope.afterSaveNav))):!1}}]}}]),angular.module("ngDownload",[]).service("$download",["$log",function($log){return angular.isDefined(download)?download:($log.error("[ngDownload] download is not defined, please install it from https://github.com/rndme/download"),null)}]),angular.module("jumplink.cms.fallback",[]).service("FallbackService",["$window","$location","$log",function($window,$location,$log){var go=function(path){var protocol=$location.protocol(),host=$location.host();angular.isString(path)?"/"!==path.charAt(0)&&(path="/"+path):path="/fallback";var url=protocol+"://"+host+path+"?force=fallback";$log.debug("Go to fallback url: "+url)};return{go:go}}]),angular.module("jumplink.cms.event",["mgcrea.ngStrap","angular-medium-editor","angularFileUpload","angularMoment","ngFocus","ngAsync","sails.io","jumplink.cms.utilities"]).service("EventService",["moment","UtilityService","$sailsSocket","$async","$log","focus","$modal","FileUploader",function(moment,UtilityService,$sailsSocket,$async,$log,focus,$modal,FileUploader){var editModal=null,typeModal=null,page=null,validate=function(event,callback){return event.title?fix(event,callback):angular.isFunction(callback)?callback("Title not set",event):null},chooseType=function(event,type,hide){event.type=type,hide()},openTypeChooserModal=function(event){typeModal.$scope.event=event,typeModal.$promise.then(typeModal.show)},setModals=function($scope,fileOptions,pageString){angular.isString(page)||(page=pageString),editModal=$modal({title:"Ereignis bearbeiten",templateUrl:"/views/modern/events/editmodal.jade",show:!1}),editModal.$scope.ok=!1,editModal.$scope.accept=function(hide){editModal.$scope.ok=!0,hide()},editModal.$scope.abort=function(hide){editModal.$scope.ok=!1,hide()},angular.isUndefined(fileOptions)&&(fileOptions={});var uploadOptions={url:"timeline/upload",removeAfterUpload:!0,headers:{options:JSON.stringify(fileOptions)}};return editModal.$scope.uploader=new FileUploader(uploadOptions),editModal.$scope.openTypeChooserModal=openTypeChooserModal,editModal.$scope.uploader.onCompleteItem=function(fileItem,response,status,headers){fileItem.event.download=response.files[0].uploadedAs},editModal.$scope.uploader.onProgressItem=function(fileItem,progress){console.info("onProgressItem",fileItem,progress)},editModal.$scope.upload=function(fileItem,event){fileItem.event=event,fileItem.upload()},typeModal=$modal({title:"Typ wählen",templateUrl:"/views/modern/events/typechoosermodal.jade",show:!1}),typeModal.$scope.chooseType=chooseType,editModal.$scope.$on("modal.hide.before",function(event,editModal){return $log.debug("edit closed",event,editModal),editModal.$scope.ok?validate(editModal.$scope.event,editModal.$scope.callback):angular.isFunction(editModal.$scope.callback)?editModal.$scope.callback("discarded",editModal.$scope.event):void 0}),getModals()},getTypeModal=function(){return typeModal},getModals=function(){return{editModal:getTypeModal(),typeModal:getTypeModal()}},edit=function(event,eventBlockName,callback){editModal.$scope.event=event,editModal.$scope.callback=callback,editModal.$scope.ok=!1,focus("eventtitle"),editModal.$promise.then(editModal.show)},split=function(events){for(var unknown=[],before=[],after=[],i=0;i<events.length;i++)angular.isDefined(events[i].to)&&(events[i].to=moment(events[i].to)),angular.isDefined(events[i].from)?(events[i].from=moment(events[i].from),events[i].from.isAfter()?after.push(events[i]):before.push(events[i])):unknown.push(events[i]);return{unknown:unknown,before:before,after:after}},removeFromClient=function(events,event,eventBlockName,callback){var errors=["no event on client site found to remove"],index=events[eventBlockName].indexOf(event);return index>-1?(events[eventBlockName].splice(index,1),angular.isFunction(callback)?callback(null,events):events):angular.isFunction(callback)?callback(errors[0],events):errors[0]},remove=function(events,event,eventBlockName,callback){event.id?($log.debug(event),$sailsSocket["delete"]("/timeline/"+event.id).success(function(users,status,headers,config){removeFromClient(events,event,eventBlockName,callback)})):removeFromClient(events,event,eventBlockName,callback)},transform=function(events){return events=split(events),events.before=UtilityService.invertOrder(events.before),events},merge=function(unknown,before,after){return angular.isUndefined(unknown)&&(unknown=[]),angular.isUndefined(before)&&(before=[]),angular.isUndefined(after)&&(after=[]),unknown.concat(before).concat(after)},append=function(events,event,callback){events.unknown.push(event);var allEvents=merge(events.unknown,events.before,events.after);return events=transform(allEvents),angular.isFunction(callback)?callback(null,events):events},create=function(data){return data&&data.from||(data.from=moment(),data.from.add(1,"hours"),data.from.minutes(0)),data&&data.title||(data.title=""),data&&data.person||(data.person=""),data&&data.place||(data.place=""),data&&data.page||callback("Page not set."),data},createEdit=function(events,event,callback){event=create(event),edit(event,null,callback)},fix=function(object,callback){return object.name&&""!==object.name||(object.name=object.title.toLowerCase().replace(/[^a-z]+/g,"")),angular.isFunction(callback)?callback(null,object):object},fixEach=function(objects,callback){for(var i=objects.length-1;i>=0;i--)objects[i]=fix(objects[i]);return angular.isFunction(callback)?callback(null,objects):objects},refresh=function(eventBlocks){var allEvents=merge(eventBlocks.unknown,eventBlocks.before,eventBlocks.after);return eventBlocks=transform(allEvents)},saveOne=function(eventBlocks,eventBlockName,event,callback){var errors=["EventService: Can't save event.","EventService: Can't save event, event to update not found.","EventService: Can't save event, parameters undefind."];angular.isDefined(event)&&angular.isDefined(eventBlockName)&&angular.isDefined(callback)?(event=fix(event),angular.isUndefined(event.id)?$sailsSocket.post("/timeline",event).success(function(data,status,headers,config){angular.isArray(data)&&(data=data[0]);var index=eventBlocks[eventBlockName].indexOf(event);index>-1?(eventBlocks[eventBlockName][index]=data,callback(null,eventBlocks[eventBlockName][index])):callback(errors[1])}).error(function(data,status,headers,config){angular.isArray(data)&&(data=data[0]),$log.error(data,status,headers,config),callback(errors[0])}):$sailsSocket.put("/timeline/"+event.id,event).success(function(data,status,headers,config){angular.isArray(data)&&(data=data[0]),event=data,callback(null,event)}).error(function(data,status,headers,config){$log.error(data,status,headers,config),callback(errors[0])})):callback(errors[2])},saveAllInBlock=function(eventBlocks,eventBlockName,callback){$async.map(eventBlocks[eventBlockName],function(event,callback){saveOne(eventBlocks,eventBlockName,event,callback)},callback)},saveBlocks=function(eventBlocks,callback){var errors=["EventService: Can't save eventBlocks, parameters undefind."];return angular.isDefined(eventBlocks)&&angular.isDefined(callback)?$async.map(["after","before","unknown"],function(eventBlockName,callback){saveAllInBlock(eventBlocks,eventBlockName,callback)},function(err,eventBlocksArray){if(err&&($log.error(err),angular.isFunction(callback)))return callback(err);var allEvents=merge(eventBlocksArray[0],eventBlocksArray[1],eventBlocksArray[2]);return eventBlocks=transform(allEvents),callback(null,eventBlocks)}):($log.error(errors[0]),angular.isFunction(callback)?callback(errors[0]):void 0)},resolve=function(page){return $sailsSocket.get("/timeline").then(function(data){return transform(data.data)},function(resp){$log.error("Error on resolve "+page,resp)})},subscribe=function(){$sailsSocket.subscribe("timeline",function(msg){switch($log.debug(msg),msg.verb){case"updated":$rootScope.authenticated&&$rootScope.pop("success","Ein Ereignis wurde aktualisiert",msg.data.title),findEvent(msg.id,function(error,event,eventBlock,index){return error?($log.debug(error),error):(event=msg.data,void $scope.refresh())});break;case"created":$rootScope.authenticated&&$rootScope.pop("success","Ein Ereignis wurde erstellt",msg.data.title),$scope.events.before.push(msg.data),$scope.refresh();break;case"removedFrom":$rootScope.authenticated&&$rootScope.pop("success","Ein Ereignis wurde entfernt",msg.data.title),findEvent(msg.id,function(error,event,eventBlock,index){return error?($log.debug(error),error):void EventService.removeFromClient($scope.events,event,eventBlock)});break;case"destroyed":$rootScope.authenticated&&$rootScope.pop("success","Ein Ereignis wurde gelöscht",msg.data.title),findEvent(msg.id,function(error,event,eventBlock,index){return error?($log.debug(error),error):void EventService.removeFromClient($scope.events,event,eventBlock)});break;case"addedTo":$rootScope.authenticated&&$rootScope.pop("success","Ein Ereignis wurde hinzugefügt",msg.data.title)}})};return{subscribe:subscribe,split:split,merge:merge,append:append,transform:transform,saveOne:saveOne,saveAllInBlock:saveAllInBlock,saveBlocks:saveBlocks,edit:edit,createEdit:createEdit,fixEach:fixEach,resolve:resolve,setModals:setModals,refresh:refresh,openTypeChooserModal:openTypeChooserModal,chooseType:chooseType,removeFromClient:removeFromClient,remove:remove}}]),angular.module("ngFocus",[]).factory("focus",["$timeout","$window",function($timeout,$window){return function(id){$timeout(function(){var element=$window.document.getElementById(id);element&&element.focus()})}}]).directive("eventFocus",["focus",function(focus){return function(scope,elem,attr){elem.on(attr.eventFocus,function(){focus(attr.eventFocusId)}),scope.$on("$destroy",function(){elem.off(attr.eventFocus)})}}]),"undefined"==typeof jumplink)var jumplink={};if(angular.module("jumplink.cms.gallery",["mgcrea.ngStrap","ngAsync","angular-medium-editor","FBAngular","sails.io","angularFileUpload","jumplink.cms.sortable","jumplink.cms.content"]).service("GalleryService",["$rootScope","$sailsSocket","$async","$filter","Fullscreen","SortableService","ContentService","FileUploader","$modal","$log",function($rootScope,$sailsSocket,$async,$filter,Fullscreen,SortableService,ContentService,FileUploader,$modal,$log){var editModal=null;uploadModal=null,fullscreenImage=null;var dropdown=[{text:'<i class="fa fa-eye"></i>&nbsp;Anzeigen',click:"goToImage(image)"},{text:'<i class="fa fa-edit"></i>&nbsp;Bearbeiten',click:"editImage(image)"},{text:'<i class="fa fa-trash"></i>&nbsp;Löschen',click:"$dropdown.hide();$dropdown.destroy();removeImage(image);"},{text:'<i class="fa fa-floppy-o"></i>&nbsp;Speichern',click:"saveImage(image)"}],getDropdown=function(){return dropdown},setEditModal=function($scope){return editModal=$modal({scope:$scope,title:"Bild bearbeiten",templateUrl:"/views/modern/gallery/editmodal.jade",show:!1}),getEditModal()},getEditModal=function(){return editModal},prepairUploadModal=function(uploadModal,imageBlocks,contentBlocks){return uploadModal.$scope.imageBlocks=imageBlocks,uploadModal.$scope.selects=getSelects(imageBlocks,contentBlocks),uploadModal.$scope.selects.length>0&&($rootScope.selectedContentBlock=uploadModal.$scope.selects[0].value),$rootScope.$watch("selectedContentBlock",function(newValue,oldValue){$log.debug("selected changed to",newValue)}),uploadModal},setUploadModal=function($scope,imageBlocks,contentBlocks,options,callback,onCompleteCallback){angular.isUndefined(options)&&(options={thumbnail:{width:300},rescrop:{width:1200,cropwidth:1200,cropheight:1200}});var uploadOptions={url:"gallery/upload",removeAfterUpload:!0,headers:{options:JSON.stringify(options)}};return $scope.uploader=new FileUploader(uploadOptions),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),angular.isFunction(onCompleteCallback)&&($scope.uploader.onComplete=onCompleteCallback),$scope.uploader.onCompleteItem=function(fileItem,response,status,headers){$log.debug("[GalleryService.uploader.onCompleteItem]",fileItem,response,status,headers),response.files.forEach(function(file,index,files){var selected=$rootScope.selectedContentBlock,imageBlocks=uploadModal.$scope.imageBlocks,currentImages=imageBlocks[selected];$log.debug("[GalleryService.$scope.uploader.onCompleteItem] selected",selected,"imageBlocks",imageBlocks,"currentImages",currentImages);var last_position=0;currentImages.length>0&&(last_position=currentImages[currentImages.length-1].position),$rootScope.authenticated&&$rootScope.pop("success","Ein Bild wurde hochgeladen",file.original.name),"undefined"==typeof file.position&&(last_position++,file.position=last_position,file.content=selected),$log.debug("[GalleryService.$scope.uploader.onCompleteItem] file",file),currentImages.push(file)})},$scope.upload=function(fileItem,image){fileItem.image=image,fileItem.upload()},uploadModal=$modal({scope:$scope,title:"Bilder hinzufügen",uploader:$scope.uploader,templateUrl:"/views/modern/gallery/uploadimagesmodal.jade",show:!1}),uploadModal=prepairUploadModal(uploadModal,imageBlocks,contentBlocks),angular.isFunction(callback)?callback(getUploadModal()):getUploadModal()},getSelects=function(imageBlocks,contentBlocks){var blockNames=Object.keys(imageBlocks),result=[];return blockNames.forEach(function(blockName,index,array){var label=ContentService.getByName(contentBlocks,blockName).title||blockName;result.push({label:label,value:blockName})}),result},getUploadModal=function(){return uploadModal},fix=function(image,page,contentname,callback){return image.page&&""!==image.page||(image.page=page),image.content&&""!==image.content||(image.content=contentname),angular.isFunction(callback)?callback(null,image):image},saveOne=function(image,page,contentname,callback){image=fix(image,page,contentname);var errors=["Bild konnte nicht gespeichert werden"];$sailsSocket.put("/gallery/"+image.id,image).success(function(data,status,headers,config){angular.isArray(data)&&(data=data[0]),angular.isFunction(callback)&&callback(null,data)}).error(function(data,status,headers,config){$log.error(errors[0],data),angular.isFunction(callback)&&callback(errors[0],data)})},saveAllBlocks=function(imageBlocks,page,callback){var blockNames=Object.keys(imageBlocks);$async.map(blockNames,function(contentname,callback){saveAll(imageBlocks[contentname],page,contentname,callback)},callback)},saveAll=function(images,page,contentname,callback){$async.map(images,function(image,callback){saveOne(image,page,contentname,callback)},callback)},remove=function(images,index,image,page,callback){("undefined"==typeof index||null===index)&&(index=images.indexOf(image)),images=SortableService.remove(images,index,image),image.id?$sailsSocket["delete"]("/gallery/"+image.id+"?filename="+image.original.name+"&page="+page,{id:image.id,filename:image.original.name,page:page}).success(function(data,status,headers,config){angular.isFunction(callback)&&callback(null,images)}).error(function(data,status,headers,config){$log.error(errors[0],data),angular.isFunction(callback)&&callback(data)}):angular.isFunction(callback)&&callback(null,images)},add=function(imageBlocks,contentBlocks,callback){uploadModal.$promise.then(uploadModal.show),uploadModal=prepairUploadModal(uploadModal,imageBlocks,contentBlocks),uploadModal.$scope.$on("modal.hide",function(){$log.debug("upload modal closed"),angular.isFunction(callback)&&callback(null)})},addBlock=function(imageBlocks,content,callback){return imageBlocks[content.name]=[],angular.isFunction(callback)?callback(null,imageBlocks[content.name]):imageBlocks[content.name]},edit=function(image,callback){$log.debug("edit",image),editModal.$scope.image=image,editModal.$promise.then(editModal.show),editModal.$scope.$on("modal.hide",function(){$log.debug("edit closed"),angular.isFunction(callback)&&callback(null,editModal.$scope.image)})},aspect=function(image,width){var height,scale,aspectRatio,win,paddingTopBottom=0,paddingLeftRight=0;return $scope.isFullScreen(image)?(aspectRatio=image.original.width/image.original.height,win=$rootScope.getWindowDimensions(),win.width/win.height<aspectRatio?(width=win.width,scale=image.original.width/width,height=image.original.height/scale,paddingTopBottom=(win.height-height)/2,height=win.height):(height=win.height,scale=image.original.height/height,width=image.original.width/scale,paddingLeftRight=(win.width-width)/2,width=win.width),{width:width+"px",height:height+"px","padding-right":paddingLeftRight+"px","padding-left":paddingLeftRight+"px","padding-top":paddingTopBottom+"px","padding-bottom":paddingTopBottom+"px"}):(scale=image.original.width/width,height=image.original.height/scale,{width:width+"px",height:height+"px"})},subscribe=function(){$sailsSocket.subscribe("gallery",function(msg){switch($log.debug(msg),msg.verb){case"updated":$rootScope.authenticated&&$log.debug("success","Ein Bild wurde aktualisiert",msg.data.original.name);break;case"created":$rootScope.authenticated&&$rootScope.pop("success","Ein Bild wurde hochgeladen",msg.data.original.name),$scope.images.push(msg.data);break;case"removedFrom":$rootScope.authenticated&&$rootScope.pop("success","Ein Bild wurde entfernt",""),$log.debug(msg.data);break;case"destroyed":$log.debug(msg.data);break;case"addedTo":$rootScope.authenticated&&$rootScope.pop("success","Ein Bild wurde hinzugefügt",""),$log.debug(msg.data)}})},resolve=function(page,content){var url="/gallery?limit=0&page="+page;return content&&(url=url+"&content="+content),$sailsSocket.get(url).then(function(data){return $filter("orderBy")(data.data,"position")},function(resp){$log.error(resp)})};return{getDropdown:getDropdown,setEditModal:setEditModal,getEditModal:getEditModal,setUploadModal:setUploadModal,getUploadModal:getUploadModal,saveOne:saveOne,saveAll:saveAll,saveAllBlocks:saveAllBlocks,remove:remove,add:add,addBlock:addBlock,edit:edit,aspect:aspect,subscribe:subscribe,resolve:resolve}}]),angular.module("jumplink.cms.history",["ui.router"]).service("HistoryService",["$window","$location","$state","$anchorScroll","$timeout","$log",function($window,$location,$state,$anchorScroll,$timeout,$log){var history=[],push=function(state,params){history.push({state:state,params:params})},all=function(){return history},go=function(step){if($log.debug("[jumplink.cms.history.HistoryService], history.length",history.length,"step",step,"history.length + step =",history.length+step),history.length+step<=0)return $location.path("/");var prev=this.previous(step||-1);return $state.go(prev.state,prev.params)},previous=function(step){return history[history.length-Math.abs(step||1)]},back=function(){return this.go(-1)},goToHashPosition=function(hash){$location.hash(hash),$anchorScroll.yOffset=60,$anchorScroll()},autoScroll=function(){var hash=$location.hash();hash?$timeout(function(){goToHashPosition(hash)},1e3):$anchorScroll()};return{push:push,all:all,go:go,previous:previous,back:back,goToHashPosition:goToHashPosition,autoScroll:autoScroll}}]).run(["HistoryService","$state","$rootScope",function(HistoryService,$state,$rootScope){$rootScope.$on("$stateChangeSuccess",function(event,to,toParams,from,fromParams){from["abstract"]||HistoryService.push(from,fromParams)}),console.log(HistoryService),HistoryService.push($state.current,$state.params)}]),angular.module("jumplink.cms.bootstrap.importexport",["jumplink.cms.importexport","jumplink.cms.bootstrap.uploader","mgcrea.ngStrap","ngFocus"]).service("ImportExportBootstrapService",["$log","focus","$modal","FileUploader",function($log,focus,$modal,FileUploader){var uploadModal=null,setModals=function($scope,fileOptions,onCompleteItemCallback,onImportStart,onAbort,onImportFinsih){return uploadModal=$modal({title:"JSON importieren",templateUrl:"/views/modern/uploadmodal.bootstrap.jade",show:!1}),uploadModal.$scope.fileOptions=fileOptions,uploadModal.$scope.imports=[],uploadModal.$scope.ok=!1,uploadModal.$scope["import"]=function(hide){uploadModal.$scope.ok=!0,angular.isFunction(onImportStart)?onImportStart(uploadModal.$scope.imports,function(err,results){angular.isFunction(onImportFinsih)&&onImportFinsih(err,results),uploadModal.$scope.imports=[],hide()}):($log.warn("[ImportExportBootstrapService.abort] onImportStart is not defined!"),uploadModal.$scope.imports=[],hide())},uploadModal.$scope.abort=function(hide){uploadModal.$scope.ok=!1,uploadModal.$scope.imports=[],angular.isFunction(onAbort)?onAbort(uploadModal.$scope.imports,function(err){hide()}):($log.warn("[ImportExportBootstrapService.abort] onAbort is not defined!"),hide())},angular.isUndefined(uploadModal.$scope.fileOptions)&&(uploadModal.$scope.fileOptions={}),uploadModal.$scope.uploadOptions={url:"importexport/upload",removeAfterUpload:!0,alias:"import",headers:{options:JSON.stringify(uploadModal.$scope.fileOptions)}},uploadModal.$scope.onCompleteItem=function(err,files){$log.debug("[ImportExportBootstrapService.onCompleteItem]"),angular.isFunction(onCompleteItemCallback)&&onCompleteItemCallback(err,files)},uploadModal.$scope.onCompleteAll=function(err,result){$log.debug("[ImportExportBootstrapService.onCompleteAll]")},uploadModal.$scope.upload=function(fileItem){fileItem.upload()},uploadModal.$scope.$on("modal.hide.before",function(modalEvent,uploadModal){$log.debug("edit closed",uploadModal.$scope,uploadModal),uploadModal.$scope.ok?uploadModal.$scope.callback(null,uploadModal.$scope):uploadModal.$scope.callback&&uploadModal.$scope.callback("discarded",uploadModal.$scope)}),getModals()},getUploadModal=function(){return uploadModal},getModals=function(){return{uploadModal:getUploadModal()}},show=function(callback){$log.debug("[BlogService.show]"),uploadModal.$scope.callback=callback,uploadModal.$scope.ok=!1,focus("blogposttitle"),uploadModal.$promise.then(uploadModal.show)},setImports=function(data,options){uploadModal.$scope.imports=uploadModal.$scope.imports.concat(data);for(var i=uploadModal.$scope.imports.length-1;i>=0;i--)uploadModal.$scope.imports[i].importOptions={doImport:!0,identifier:uploadModal.$scope.imports[i][options.identifierKey],description:uploadModal.$scope.imports[i][options.descriptionKey]}};return{show:show,setModals:setModals,setImports:setImports}}]),angular.module("jumplink.cms.importexport",["jumplink.cms.attachment","ngAsync","sails.io"]).service("ImportExportService",["$sailsSocket","$async","$log","$filter",function($sailsSocket,$async,$log,$filter){return{}}]),angular.module("jumplink.cms.info",["sails.io"]).service("CmsService",["$log","$sailsSocket",function($log,$sailsSocket){var info=function(url,callback){var errors=["[CmsService] Error: On trying to get cms info, url: "+url,"[CmsService] Error: Result is null, url: "+url],warns=["[CmsService] Warn: Request has more than one results, url: "+url];return $sailsSocket.get(url).then(function(data){return angular.isUndefined(data)||angular.isUndefined(data.data)?angular.isFunction(callback)?callback(errors[1]):null:(data.data instanceof Array&&(data.data=data.data[0],$log.warn(warns[0])),angular.isFunction(callback)?callback(null,data.data):data.data)},function(resp){return $log.error(errors[0],resp),angular.isFunction(callback)?callback(errors[0],resp):resp})},infoUser=function(callback){return info("/cms/infouser",callback)},infoAdmin=function(callback){return info("/cms/infoadmin",callback)},restart=function(callback){return $sailsSocket.post("/cms/restart").then(function(data){return $log.debug("[CmsService.restart]",data),callback(null,data)},function(resp){return $log.error("[CmsService.restart]",resp),callback(resp)})};return{infoUser:infoUser,infoAdmin:infoAdmin,restart:restart}}]),angular.module("jumplink.cms.multisite",["sails.io","jumplink.cms.sails"]).service("MultisiteService",["$rootScope","JLSailsService","$log",function($rootScope,JLSailsService,$log){var resolve=function(query,callback){var options={method:"get",resultIsArray:!0};return JLSailsService.resolve("/multisite/find",query,options,callback)},resolveNames=function(query,callback){var options={method:"get",resultIsArray:!0};return JLSailsService.resolve("/multisite/findnames",query,options,callback)},resolveHosts=function(query,callback){var options={method:"get",resultIsArray:!0};return JLSailsService.resolve("/multisite/findhosts",query,options,callback)};return{resolve:resolve,resolveNames:resolveNames,resolveHosts:resolveHosts}}]),angular.module("jumplink.cms.bootstrap.routes",["jumplink.cms.routes","jumplink.cms.bootstrap.importexport"]).service("RoutesBootstrapService",["$log","$async","ImportExportBootstrapService","UtilityService","RoutesService","SortableService",function($log,$async,ImportExportBootstrapService,UtilityService,RoutesService,SortableService){var modals=null,host=null,setHost=function(newHost){host=newHost},setupImportModal=function($scope,onImportFinsih){var fileOptions={},onCompleteFile=function(err,files){$log.debug("[RoutesBootstrapService.onCompleteFile]",files);for(var data=[],i=0;i<files.length;i++)data=data.concat(files[i].data);ImportExportBootstrapService.setImports(data,{identifierKey:"objectName",descriptionKey:"title"})},onImportStart=function(imports,next){$log.debug("[RoutesBootstrapService.onImportStart]",host),$async.map(imports,function(item,callback){item.importOptions.doImport===!0?RoutesService.updateOrCreateByHostByObjectNameAndNavbar(host,item,callback):callback()},function(err,results){$log.debug("[RoutesBootstrapService.onImportStart] done",err,results),results=SortableService.sort(results),next(err,results)})},onAbort=function(imports,next){$log.debug("[RoutesBootstrapService.onAbort]"),next()};modals=ImportExportBootstrapService.setModals($scope,fileOptions,onCompleteFile,onImportStart,onAbort,onImportFinsih)};return{setHost:setHost,setupImportModal:setupImportModal,showImportModal:ImportExportBootstrapService.show}}]),angular.module("jumplink.cms.routes",["ui.router","jumplink.cms.sails","jumplink.cms.sortable","jumplink.cms.utilities","ngDownload"]).provider("jlRoutes",["$stateProvider","$urlRouterProvider","$locationProvider",function jlRoutesProvider($stateProvider,$urlRouterProvider,$locationProvider){this.html5Mode=$locationProvider.html5Mode,this.otherwise=$urlRouterProvider.otherwise,this.state=$stateProvider.state,this.when=function(url1,url2){$urlRouterProvider.when(url1,url2)},this.setLayouts=function(layouts){for(var stateName in layouts)this.state(stateName,layouts[stateName])},this.setRoutes=function(routes,routeOptions){for(var i=0;i<routes.length;i++)if(routes[i].main){var options={};if("string"==typeof routes[i].url&&routes[i].url.length>0&&(options.url=routes[i].url),routes[i].customstate===!0?(angular.isDefined(routes[i].state.resolve)&&"string"==typeof routes[i].state.resolve&&routes[i].state.resolve.length>0&&(eval(routes[i].state.resolve),options.resolve=resolve),angular.isDefined(routes[i].state.views)&&"string"==typeof routes[i].state.views&&routes[i].state.views.length>0&&(eval(routes[i].state.views),options.views=view)):angular.isDefined(routes[i].objectName)&&angular.isDefined(routeOptions[routes[i].objectName])?(angular.isObject(routeOptions[routes[i].objectName].resolve)&&(options.resolve=routeOptions[routes[i].objectName].resolve),angular.isObject(routeOptions[routes[i].objectName].views)&&(options.views=routeOptions[routes[i].objectName].views)):console.error("objectName "+routes[i].objectName+" not found for route "+routes[i]),angular.isDefined(options.url)&&angular.isDefined(options.views)&&$stateProvider.state(routes[i].state.name,options),angular.isArray(routes[i].alternativeUrls))for(var a=0;a<routes[i].alternativeUrls.length;a++)console.log("New redirect: "+routes[i].alternativeUrls[a]+" -> "+routes[i].url),$urlRouterProvider.when(routes[i].alternativeUrls[a],routes[i].url)}},this.$get=function(){return new jlRoutes}}]).filter("showOnlyMainRoutes",function(){return function(routes,active){if(active!==!0)return routes;for(var result=[],i=0;i<routes.length;i++)routes[i].main===!0&&result.push(routes[i]);return result}}).service("RoutesService",["$rootScope","$download","JLSailsService","$log","SortableService","UtilityService",function($rootScope,$download,JLSailsService,$log,SortableService,UtilityService){var create=function(data){return $log.debug("[RoutesService.create] data",data),angular.isObject(data)||(data={}),angular.isString(data.match)||(data.match=""),angular.isString(data.title)||(data.title=""),data.main!==!0&&data.main!==!1&&(data.main=!1),angular.isString(data.url)||(data.url=""),angular.isArray(data.alternativeUrls)||(data.alternativeUrls=[]),(angular.isUndefined(data.state)||!angular.isObject(data.state))&&(data.state={}),angular.isString(data.state.name)||(data.state.name=""),data.state.customstate!==!0&&data.state.customstate!==!1&&(data.state.customstate=!1),angular.isString(data.state.url)||(data.state.url=""),angular.isString(data.state.views)||(data.state.views=""),angular.isString(data.state.resolve)||(data.state.resolve=""),angular.isObject(data.fallback)||(data.fallback={}),angular.isString(data.fallback.url)||(data.fallback.url=""),data},append=function(routes,data,callback){$log.debug("[RoutesService] data before",data),data=create(data),$log.debug("[RoutesService] data after",data),SortableService.append(routes,data,callback)},swap=function(routes,index_1,index_2,callback){return SortableService.swap(contents,index_1,index_2,callback)},moveForward=function(index,routes,callback){return SortableService.moveForward(index,routes,callback)},moveBackward=function(index,routes,callback){return SortableService.moveBackward(index,routes,callback)},removeFromClient=function(routes,index,route,callback){return angular.isFunction(callback)?SortableService.remove(routes,index,route,callback):SortableService.remove(routes,index,route)},remove=function(routes,index,route,callback){if((angular.isUndefined(route)||null===route)&&angular.isDefined(index)&&(route=routes[index]),(angular.isUndefined(index)||null===index)&&(index=routes.indexOf(route)),routes=removeFromClient(routes,index,route),route.id){$log.debug("[RoutesService.remove] remove from server, too",route);var options={method:"delete",resultIsArray:!1};return JLSailsService.resolve("/routes/destroy/"+route.id,{id:route.id},options,callback)}},find=function(query,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/routes/find",query,options,callback)},findOne=function(query,callback){var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/routes/findOne",query,options,callback)},findByHost=function(query,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Routes/findByHost",query,options,callback)},exportByHost=function(host,download,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Routes/exportByHost",{host:host},options,function(err,data){return $log.debug("[RoutesService.exportByHost]",err,data),err?(download&&$download(JSON.stringify(data),"error.txt","text/plain"),callback(err)):(download&&$download(JSON.stringify(data),"routes.json","text/json"),callback(err,data))})},updateOrCreate=function(route,callback){$log.debug("[RoutesService.updateOrCreate]",route);var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/Routes/updateOrCreate",{route:route},options,callback)},updateOrCreateByHostByObjectNameAndNavbar=function(host,route,callback){$log.debug("[RoutesService.updateOrCreateByHostByObjectNameAndNavbar]",host,route);var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/Routes/updateOrCreateByHostByObjectNameAndNavbar",{host:host,route:route},options,callback)},updateOrCreateByHost=function(host,route,callback){$log.debug("[RoutesService.updateOrCreateByHost]",host,route);var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/Routes/updateOrCreateByHost",{host:host,route:route},options,callback)},updateOrCreateEach=function(routes,callback){
$log.debug("[RoutesService.updateOrCreateEach]",routes);var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Routes/updateOrCreateEach",{routes:routes},options,callback)},updateOrCreateEachByHost=function(host,routes,callback){$log.debug("[RoutesService.updateOrCreateEachByHost]",host,routes);var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Routes/updateOrCreateEachByHost",{host:host,routes:routes},options,callback)},generateObjectnameFromStatename=function(statename){$log.debug("[RoutesController.generateObjectnameFromStatename]",statename);for(var objectname="",keys=statename.split("."),k=0;k<keys.length;k++)objectname+=UtilityService.capitalizeFirstLetter(keys[k]);return objectname=UtilityService.lowercaseFirstLetter(objectname)},generateObjectnameFromUrl=function(url){for(var objectname="",keys=url.split("/"),k=0;k<keys.length;k++)objectname+=UtilityService.capitalizeFirstLetter(keys[k]);return objectname=UtilityService.lowercaseFirstLetter(objectname),$log.debug("[RoutesController.generateObjectnameFromUrl]",url,keys,objectname,objectname.length),objectname};return{create:create,append:append,swap:swap,moveForward:moveForward,moveBackward:moveBackward,removeFromClient:removeFromClient,remove:remove,destroy:remove,find:find,findOne:findOne,findByHost:findByHost,exportByHost:exportByHost,updateOrCreate:updateOrCreate,updateOrCreateByHostByObjectNameAndNavbar:updateOrCreateByHostByObjectNameAndNavbar,updateOrCreateByHost:updateOrCreateByHost,updateOrCreateEach:updateOrCreateEach,updateOrCreateEachByHost:updateOrCreateEachByHost,saveEachByHost:updateOrCreateEachByHost,generateObjectnameFromStatename:generateObjectnameFromStatename,generateObjectnameFromUrl:generateObjectnameFromUrl}}]),angular.module("jumplink.cms.sails",["sails.io"]).service("JLSailsService",["$rootScope","$sailsSocket","$q","$log",function($rootScope,$sailsSocket,$q,$log){var resolve=function(url,query,options,callback,next){var deferred=$q.defer(),errors=["On trying to resolve "+url,"Request has more than one results","No result"];return angular.isUndefined(options)&&(options={}),angular.isUndefined(options.method)&&(options.method="get"),angular.isUndefined(options.resultIsArray)&&(options.resultIsArray=!1),angular.isUndefined(query)&&(query={}),$sailsSocket[options.method](url,query).then(function(data){return angular.isUndefined(data)||angular.isUndefined(data.data)?angular.isFunction(callback)?callback(null,null):deferred.resolve(null):(!options.resultIsArray&&angular.isArray(data.data)&&(data.data=data.data[0],$log.warn(errors[1])),next&&(data.data=next(data.data)),angular.isFunction(callback)&&callback(null,data.data),deferred.resolve(data.data))},function(resp){return $log.error(errors[0],resp),angular.isFunction(callback)?callback(errors[0],resp):deferred.reject(errors[0])}),deferred.promise};return{resolve:resolve}}]),angular.module("jumplink.cms.sidebar",["mgcrea.ngStrap.aside"]).directive("jlSidebar",["$compile","$window",function($compile,$window){return{restrict:"E",replace:!0,transclude:!0,templateUrl:"/views/modern/sidebar.jade",scope:{routes:"=",title:"="},link:function($scope,$element,$attrs){}}}]),angular.module("jumplink.cms.session",["sails.io","jumplink.cms.sails"]).service("SessionService",["$rootScope","JLSailsService","$sailsSocket","$q","$log",function($rootScope,JLSailsService,$sailsSocket,$q,$log){var create=function(user,callback){$log.debug("[SessionService.create]",user);var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/session/create",user,options,callback)},destroy=function(user,callback){$log.debug("[SessionService.destroy]",user);var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/session/destroy",user,options,callback)},isAuthenticated=function(callback){$log.log("[SessionService.isauthenticated]");$q.defer();return $sailsSocket.get("/session/authenticated").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},needToBeAuthenticated=function(){$log.log("[SessionService.needToBeAuthenticated] authenticated");var deferred=$q.defer();return $sailsSocket.get("/session/authenticated").then(function(data){return data.data?($log.log("is authenticated",data),deferred.resolve(data.data)):($log.log("is not authenticated",data),deferred.reject("You need to be logged in"))}),deferred.promise},bloggerOrBetter=function(callback){$log.log("[SessionService.bloggerOrBetter]");$q.defer();return $sailsSocket.get("/session/bloggerOrBetter").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},developerOrBetter=function(callback){$log.log("[SessionService.developerOrBetter]");$q.defer();return $sailsSocket.get("/session/developerOrBetter").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},siteadminOrBetter=function(callback){$log.log("[SessionService.siteadminOrBetter]");$q.defer();return $sailsSocket.get("/session/siteadminOrBetter").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},superadmin=function(callback){$log.log("[SessionService.superadmin]");$q.defer();return $sailsSocket.get("/session/superadmin").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},employee=function(callback){$log.log("[SessionService.employee]");$q.defer();return $sailsSocket.get("/session/employee").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},employeeOrBetter=function(callback){$log.log("[SessionService.employee]");$q.defer();return $sailsSocket.get("/session/employeeOrBetter").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},needToBeEmployeeOrBetter=function(callback){$log.log("[SessionService.authenticated] authenticated");var deferred=$q.defer();return $sailsSocket.get("/session/employeeOrBetter").then(function(data){return data.data?($log.log("is employeeOrBetter",data),deferred.resolve(data.data)):($log.log("is not employeeOrBetter",data),deferred.reject("You must be an employee or a user with more credentials to do that"))}),deferred.promise},needToBeSiteadminOrBetter=function(callback){$log.log("[SessionService.authenticated] authenticated");var deferred=$q.defer();return $sailsSocket.get("/session/siteadminOrBetter").then(function(data){return data.data?($log.log("is siteadminOrBetter",data),deferred.resolve(data.data)):($log.log("is not employeeOrBetter",data),deferred.reject("You must be an admin or a user with more credentials to do that"))}),deferred.promise},getAllPolicies=function(callback){$log.log("[SessionService.getAllPolicies]");$q.defer();return $sailsSocket.get("/session/getAllPolicies").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})},getUser=function(callback){$log.log("[SessionService.getUser]");$q.defer();return $sailsSocket.get("/session/getUser").then(function(data){return angular.isFunction(callback)?callback(null,data.data):data.data})};return{create:create,destroy:destroy,authenticated:needToBeAuthenticated,needToBeAuthenticated:needToBeAuthenticated,isAuthenticated:isAuthenticated,bloggerOrBetter:bloggerOrBetter,developerOrBetter:developerOrBetter,siteadminOrBetter:siteadminOrBetter,superadmin:superadmin,employee:employee,employeeOrBetter:employeeOrBetter,needToBeEmployeeOrBetter:needToBeEmployeeOrBetter,needToBeSiteadminOrBetter:needToBeSiteadminOrBetter,getAllPolicies:getAllPolicies,getUser:getUser}}]),angular.module("jumplink.cms.sortable",["jumplink.cms.utilities"]).service("SortableService",["UtilityService","$log","$filter",function(UtilityService,$log,$filter){var resetPosition=function(array){for(var i=array.length-1;i>=0;i--)array[i].position=i+1;return array},sort=function(objects){return $filter("orderBy")(objects,"position")},swap=function(objects,index_1,index_2,cb){var object_1=objects[index_1],object_2=objects[index_2],position_tmp=object_1.position;return object_1.position=object_2.position,object_2.position=position_tmp,objects[index_1]=object_2,objects[index_2]=object_1,angular.isFunction(cb)?cb(null,objects):objects},move=function(array,old_index,new_index,cb){if($log.debug("[SortableService] move"),new_index>=array.length)for(var k=new_index-array.length;k--+1;)array.push(void 0);return array.splice(new_index,0,array.splice(old_index,1)[0]),array=resetPosition(array),angular.isFunction(cb)&&cb(null,array),array},append=function(objects,data,cb,unique,uniqueKey){$log.debug("[SortableService.append] data",data);var new_object,errors=["Unique key '"+uniqueKey+"' already exist"],new_index=objects.length,new_position=1,uniqueIndex=-1,okay=function(new_object,objects,new_index,cb){return objects.push(new_object),angular.isFunction(cb)?cb(null,objects,new_index):objects},error=function(error,objects,uniqueIndex,cb){return angular.isFunction(cb)?cb(error,objects,uniqueIndex):error};return new_index>=1&&(new_position=objects[new_index-1].position+1),new_object={position:new_position},new_object=angular.extend(new_object,data),$log.debug("[SortableService.append] new_object",new_object),unique&&new_object[uniqueKey]?(uniqueIndex=UtilityService.findKeyValue(objects,uniqueKey,new_object[uniqueKey]),uniqueIndex>-1?error(errors[0],objects,uniqueIndex,cb):okay(new_object,objects,new_index,cb)):okay(new_object,objects,new_index,cb)},moveObjectToAnotherArray=function(object,index_from,array_from,array_to,cb,replaceData){var errors=["[SortableService] Error: Function parameters not correctly set"],errorParamsNotSet=function(){return $log.error(errors[0],object,index_from,array_from,array_to),cb(errors[0])};null===object?object=array_from[index_from]:null===index_from?index_from=array_from.indexOf(object):errorParamsNotSet(),angular.isArray(array_from)&&angular.isArray(array_to)||errorParamsNotSet(),append(array_to,object,function(err,array_to,index_to){return err?cb(err):void remove(array_from,index_from,object,function(err,array_from){return err?cb(err):cb(null,{index_from:index_from,array_from:array_from,index_to:index_to,array_to:array_to})})},!1)},moveForward=function(index,objects,cb){return index+1<objects.length?swap(objects,index,index+1,cb):angular.isFunction(cb)?cb("Can't move forward, index is the last element.",objects):objects},moveBackward=function(index,objects,cb){return index-1>=0?swap(objects,index,index-1,cb):angular.isFunction(cb)?cb("Can't move backward, index is the first element.",objects):objects},remove=function(objects,index,object,cb){return("undefined"==typeof index||null===index)&&(index=objects.indexOf(object)),index>-1&&objects.splice(index,1),angular.isFunction(cb)?cb(null,objects):objects},dropMove=function(objects,dropObjectIndex,dragObject,event,cb,moveFunction){moveFunction||(moveFunction=move);var dragObjectIndex=objects.indexOf(dragObject),dropObject=objects[dropObjectIndex];return $log.debug("[SortableService] dropMove, dragObject:",dragObject,"dragObjectIndex",dragObjectIndex,"dropObject",dropObject,"dropObjectIndex",dropObjectIndex),moveFunction(objects,dragObjectIndex,dropObjectIndex,cb)};return{resetPosition:resetPosition,sort:sort,swap:swap,moveObjectToAnotherArray:moveObjectToAnotherArray,move:move,moveForward:moveForward,moveBackward:moveBackward,remove:remove,append:append,dropMove:dropMove}}]),angular.module("jumplink.cms.bootstrap.signin",["mgcrea.ngStrap","jumplink.cms.signin"]).service("SigninBootstrapService",["$rootScope","SigninService","$log","$modal",function($rootScope,SigninService,$log,$modal){var siginWithModal=function(title,goBackAfterSignin,extendRoles,scope,callback){$log.debug("[SigninBootstrapService.siginWithModal]",title,goBackAfterSignin,extendRoles),angular.isFunction(goBackAfterSignin)&&!angular.isFunction(callback)&&(callback=goBackAfterSignin,goBackAfterSignin=!1),angular.isFunction(extendRoles)&&!angular.isFunction(callback)&&(callback=extendRoles,extendRoles=!1),angular.isFunction(scope)&&!angular.isFunction(callback)&&(callback=scope,scope=null);var signinModal=$modal({title:title,templateUrl:"/views/modern/signin.bootstrap.modal.jade",show:!1});signinModal.$scope.aborted=!1,signinModal.$scope.result=null,signinModal.$scope.user={email:"",password:""},signinModal.$scope.abort=function(user){signinModal.$scope.aborted=!0},signinModal.$scope.signin=function(user){$log.debug("[SigninBootstrapService.siginWithModal.signin]",user),SigninService.signin(user,goBackAfterSignin,extendRoles,scope,function(error,result){return error?(signinModal.$scope.error=error,signinModal.$scope.error):(signinModal.$scope.result=result,void $log.debug(result))})},signinModal.$scope.$on("modal.hide",function(){$log.debug("signin modal closed"),angular.isFunction(callback)&&callback(signinModal.$scope.error,signinModal.$scope.result,signinModal.$scope.user)}),signinModal.$promise.then(signinModal.show)};return{siginWithModal:siginWithModal}}]),angular.module("jumplink.cms.signin",["jumplink.cms.session","jumplink.cms.history","ngAsync"]).service("SigninService",["SessionService","$log","HistoryService","$async",function(SessionService,$log,HistoryService,$async){var signin=function(user,goBackAfterSignin,extendRoles,scope,callback){angular.isFunction(goBackAfterSignin)&&!angular.isFunction(callback)&&(callback=goBackAfterSignin,goBackAfterSignin=!1),angular.isFunction(extendRoles)&&!angular.isFunction(callback)&&(callback=extendRoles,extendRoles=!1),angular.isFunction(scope)&&!angular.isFunction(callback)&&(callback=scope,scope=null),$log.debug("[SigninService.signin]",user),SessionService.create(user,function(err,result){return err?callback(err):result.authenticated?(extendRoles===!0&&SessionService.getAllPolicies(function(err,results){return err?callback(err):($log.debug("scope before extend",scope),angular.extend(scope,results),$log.debug("scope after extend",scope),void(goBackAfterSignin===!0&&HistoryService.back()))}),goBackAfterSignin===!0&&HistoryService.back(),$log.debug("[SigninService.signin]",user),$log.debug("[SigninService.signin] err result",err,result),callback(null,result)):null})};return{signin:signin}}]),angular.module("jumplink.cms.theme",["sails.io","ngAsync","jumplink.cms.sails"]).service("ThemeService",["$rootScope","$sailsSocket","$log","$async","JLSailsService",function($rootScope,$sailsSocket,$log,$async,JLSailsService){var isSubscribed=!1,find=function(query,callback){$log.debug("[ThemeService.find]",query);var options={method:"get",resultIsArray:!0};return JLSailsService.resolve("/theme/find",query,options,callback)},findByHost=function(host,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/theme/findbyhost",{host:host},options,callback)},save=function(themes,callback){updateOrCreateEach(themes,function(err,result){angular.isDefined(callback)&&callback(err,result)})},updateOrCreateEach=function(themes,callback){$log.debug("[ThemeService.updateOrCreateEach]",themes);var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Theme/updateOrCreateEach",{themes:themes},options,callback)},updateOrCreateEachByHost=function(host,themes,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/Theme/updateOrCreateEachByHost",{host:host,themes:themes},options,callback)},subscribe=function(){isSubscribed||($sailsSocket.subscribe("theme",function(msg){switch($rootScope.authenticated&&$log.debug(msg),msg.verb){case"updated":$rootScope.authenticated&&$rootScope.pop("success","Themeeinstellungen wurdne aktualisiert",msg.data);break;case"created":$rootScope.authenticated&&$rootScope.pop("success","Themeeinstellungen wurden erstellt",msg.data);break;case"removedFrom":$rootScope.authenticated&&$rootScope.pop("success","Themeeinstellungen wurden entfernt","");break;case"destroyed":$rootScope.authenticated&&$rootScope.pop("success","Themeeinstellungen wurden gelöscht","");break;case"addedTo":$rootScope.authenticated&&$rootScope.pop("success","Themeeinstellungen wurden hinzugefügt","")}}),isSubscribed=!0)};return{find:find,findByHost:findByHost,save:save,updateOrCreateEach:updateOrCreateEach,updateOrCreateEachByHost:updateOrCreateEachByHost,subscribe:subscribe}}]),angular.module("jumplink.cms.subnavigation",["mgcrea.ngStrap","sails.io","jumplink.cms.sortable","ngFocus","jumplink.cms.utilities"]).service("SubnavigationService",["$rootScope","$window","$log","$sailsSocket","$filter","$modal","SortableService","UtilityService","focus",function($rootScope,$window,$log,$sailsSocket,$filter,$modal,SortableService,UtilityService,focus){var editModal=null,setEditModal=function($scope){return editModal=$modal({scope:$scope,title:"Navigation bearbeiten",templateUrl:"/views/modern/editsubnavigationmodal.jade",show:!1}),getEditModal()},getEditModal=function(){return editModal},subscribe=function(){$sailsSocket.subscribe("navigation",function(msg){switch($log.debug("[SubnavigationService] Navigation event!",msg),msg.verb){case"updated":$rootScope.authenticated&&$rootScope.pop("success","Navigation wurde aktualisiert",msg.id)}})},resizeOnImagesLoaded=function(){angular.element($window).imagesLoaded(function(){angular.element($window).triggerHandler("resize")})},create=function(data){return data&&data.target||(data.target=""),data&&data.name||(data.name=""),data&&data.page||cb("Page not set."),data},append=function(navs,data,cb){data=create(data),SortableService.append(navs,data,cb)},swap=function(navs,index_1,index_2,cb){return SortableService.swap(contents,index_1,index_2,cb)},moveForward=function(index,navs,cb){return SortableService.moveForward(index,navs,cb)},moveBackward=function(index,navs,cb){return SortableService.moveBackward(index,navs,cb)},edit=function(navs,cb){if(editModal.$scope.navs=navs,editModal.$promise.then(editModal.show),angular.isDefined(editModal.$scope.navs)&&editModal.$scope.navs.length>0){var index=Number(editModal.$scope.navs.length-1);focus("subnavigationeditname"+index)}editModal.$scope.$on("modal.hide",function(){cb(null,editModal.$scope.navs)})},removeFromClient=function(navs,index,nav,cb){return angular.isFunction(cb)?SortableService.remove(navs,index,nav,cb):SortableService.remove(navs,index,nav)},remove=function(navs,index,nav,page,cb){(angular.isUndefined(nav)||null===nav)&&angular.isDefined(index)&&(nav=navs[index]),(angular.isUndefined(index)||null===index)&&(index=navs.indexOf(nav)),navs=removeFromClient(navs,index,nav),nav.id&&($log.debug("[SubnavigationService] remove from server, too",nav),$sailsSocket["delete"]("/navigation/"+nav.id+"?page="+page,{id:nav.id,page:page}).success(function(data,status,headers,config){return angular.isFunction(cb)?cb(null,navs):void 0}).error(function(data,status,headers,config){return $log.error(errors[0],data),angular.isFunction(cb)?cb(data):void 0}))},removeByTarget=function(navs,target,page,cb){$log.debug("[SubnavigationService] remove subnavigation by target "+target);var index=UtilityService.findKeyValue(navs,"target",target);index>-1?($log.debug("[SubnavigationService] subnavigation found "+index),remove(navs,index,null,page,cb)):angular.isFunction(cb)&&cb("Subnavigation not found")},fix=function(fixed,object,index,cb){return angular.isDefined(object.name)&&angular.isString(object.name)&&""!==object.name?fixed.push(object):$log.warn("Name not set, remove Subnavigation"),angular.isFunction(cb)?cb(null,fixed):fixed},fixEach=function(objects,cb){for(var fixed=[],i=objects.length-1;i>=0;i--)fixed=fix(fixed,objects[i],i);return angular.isFunction(cb)?cb(null,fixed):fixed},save=function(navs,page,cb){fixEach(navs,function(err,navs){$sailsSocket.put("/navigation/replaceall",{navs:navs,page:page}).success(function(data,status,headers,config){if(null!==data&&"undefined"!=typeof data)navs=$filter("orderBy")(data,"position"),angular.isFunction(cb)&&cb(null,navs);else{var err="Navigation konnte nicht gespeichert werden";$rootScope.pop("error",err,""),angular.isFunction(cb)&&cb(err,navs)}})})},resolve=function(page){return $sailsSocket.get("/navigation?page="+page,{page:page}).then(function(data){return angular.isUndefined(data)||angular.isUndefined(data.data)?($log.warn("Warn: On trying to resolve "+page+" navs!","Not found, navigation is empty!"),null):(data.data=$filter("orderBy")(data.data,"position"),$log.debug("[SubnavigationService]",data),data.data)},function(resp){$log.error("[SubnavigationService] Error: On trying to resolve "+page+" navs!",resp)})};return{resizeOnImagesLoaded:resizeOnImagesLoaded,subscribe:subscribe,setEditModal:setEditModal,getEditModal:getEditModal,create:create,append:append,add:append,swap:swap,moveForward:moveForward,moveBackward:moveBackward,edit:edit,removeFromClient:removeFromClient,remove:remove,removeByTarget:removeByTarget,save:save,resolve:resolve}}]).directive("jlSubnavigation",["$compile","$window","SubnavigationService","HistoryService",function($compile,$window,SubnavigationService,HistoryService){return{restrict:"E",templateUrl:"/views/modern/subnavigation.bootstrap.jade",scope:{authenticated:"=",navs:"=",afterSave:"=?",afterRemove:"=?",afterEdit:"=?",afterAdd:"=?",logger:"=",page:"=?"},link:function($scope,$element,$attrs){},controller:["$rootScope","$scope","ContentService","$log","$state",function($rootScope,$scope,ContentService,$log,$state){SubnavigationService.setEditModal($scope),$scope.goTo=HistoryService.goToHashPosition,SubnavigationService.subscribe(),angular.isUndefined($scope.page)&&($scope.page=$state.current.name),angular.isUndefined($scope.afterSave)&&($scope.afterSave=function(err,result){return err?$scope.logger("error","Navigation wurde nicht gespeichert!",err):void $scope.logger("success","Navigation gespeichert!",result.title)}),angular.isUndefined($scope.afterRemove)&&($scope.afterRemove=function(err,result){return err?$scope.logger("error","Navigation wurde nicht entfernt!",err):void $scope.logger("success","Navigation entfernt!",result.title)}),angular.isUndefined($scope.afterEdit)&&($scope.afterEdit=function(err,result){return err?$scope.logger("error","Navigation wurde nicht bearbeitet!",err):void $scope.logger("success","Navigation bearbeitet!",result.title)}),angular.isUndefined($scope.afterAdd)&&($scope.afterAdd=function(err,result){return err?$scope.logger("error","Navigation wurde nicht hinzugefügt!",err):void $scope.logger("success","Navigation hinzugefügt!",result.title)}),$scope.add=function(){return $scope.authenticated?void SubnavigationService.add($scope.navs,{page:page},$scope.afterAdd):!1},$scope.addNav=$scope.add,$scope.moveForward=function(index,nav){SortableService.moveForward(index,$scope.navs,function(err,navs){return err?($log.error("Error: On move subnavigation forward!",err),err):void($scope.navs=navs)})},$scope.moveForwardNav=$scope.moveForward,$scope.moveBackward=function(index,nav){SortableService.moveBackward(index,$scope.navs,function(err,navs){return err?($log.error("Error: On move content backward!",err),err):void($scope.navs=navs)})},$scope.moveBackwardNav=$scope.moveBackward,$scope.edit=function(navs){return $scope.authenticated?void SubnavigationService.edit(navs,$scope.afterEdit):!1},$scope.editNavs=$scope.edit,$scope.remove=function(index,nav){return $scope.authenticated?void SubnavigationService.remove($scope.navs,index,nav,page,$scope.afterRemove):!1},$scope.removeNav=remove,$scope.save=function(){SubnavigationService.save($scope.navs,page,$scope.afterSave)},$scope.onDragOnComplete=function(index,nav,evt){null===nav&&$log.debug("*click*",index),$log.debug("onDragOnComplete, nav:",nav,"index",index)},$scope.onDragOnNavComplete=$scope.onDragOnComplete,$scope.onDropOnComplete=function(dropnavindex,dragnav,event){SortableService.dropMove($scope.navs,dropnavindex,dragnav,event,function(err,navs){$scope.navs=navs})},$scope.onDropOnNavComplete=$scope.onDropOnComplete,$scope.onDropOnAreaComplete=function(nav,evt){$scope.navs.indexOf(nav)}}]}}]),angular.module("jumplink.cms.toolbar",["FBAngular"]).directive("jlToolbar",["$compile","$window",function($compile,$window){return{restrict:"E",templateUrl:"/views/modern/toolbar.jade",scope:{routes:"=",title:"=",shorttitle:"=",fluid:"=",position:"=",filter:"=",subnavigation:"=?"},link:function($scope,$element,$attrs){},controller:["$scope","$log","Fullscreen",function($scope,$log,Fullscreen){$scope.fullscreenIsSupported=Fullscreen.isSupported(),$scope.isFullscreen=!1,$log.debug("[jumplink.cms.toolbar.jlToolbar.controller]",$scope),Fullscreen.$on("FBFullscreen.change",function(evt,isFullscreenEnabled){$scope.isFullscreen=isFullscreenEnabled===!0}),$scope.toggleFullscreen=function(){Fullscreen.isEnabled()?Fullscreen.cancel():Fullscreen.all()}}]}}]),angular.module("jumplink.cms.user",["sails.io","jumplink.cms.sails"]).service("UserService",["$rootScope","$sailsSocket","$log","JLSailsService",function($rootScope,$sailsSocket,$log,JLSailsService){var isSubscribed=!1,save=function(user,callback){angular.isString(user.role)||(user.role="siteadmin"),angular.isDefined(user.id)?($log.debug("update user: sailsSocket.put('/user/"+user.id+"..'"),$sailsSocket.put("/user/"+user.id,user).success(function(data,status,headers,config){$log.debug(data,status,headers,config),angular.isDefined(data)&&angular.isDefined(data.password)&&delete data.password,callback(null,data,status,headers,config)})):($log.debug("create user: sailsSocket.post('/user.."),$sailsSocket.post("/user",user).success(function(data,status,headers,config){$log.debug("data",data,"status",status,"headers",headers,"config",config),angular.isDefined(data)&&angular.isDefined(data.password)&&delete data.password,callback(null,data,status,headers,config)}))},subscribe=function(){isSubscribed||($sailsSocket.subscribe("user",function(msg){switch($rootScope.authenticated&&$log.debug(msg),msg.verb){case"updated":$rootScope.authenticated&&$rootScope.pop("success","Ein Benutzer wurde aktualisiert",msg.data.name);break;case"created":$rootScope.authenticated&&$rootScope.pop("success","Ein Benutzer wurde erstellt",msg.data.name);break;case"removedFrom":$rootScope.authenticated&&$rootScope.pop("success","Ein Benutzer wurde entfernt","");break;case"destroyed":$rootScope.authenticated&&$rootScope.pop("success","Ein Benutzer wurde gelöscht","");break;case"addedTo":$rootScope.authenticated&&$rootScope.pop("success","Ein Benutzer wurde hinzugefügt","")}}),isSubscribed=!0)},removeFromClient=function(users,user){var index=users.indexOf(user);$log.debug("removeFromClient",user,index),index>-1&&users.splice(index,1)},remove=function(users,user){$log.debug("$scope.remove",user),$rootScope.authenticated&&(users.length<=1?$log.error("Der letzte Benutzer kann nicht gelöscht werden."):(removeFromClient(users,user),user.id&&$sailsSocket["delete"]("/user/"+user.id,{id:user.id}).success(function(data,status,headers,config){$log.debug("user delete request",data,status,headers,config)})))},findByHost=function(host,callback){var options={method:"post",resultIsArray:!0};return JLSailsService.resolve("/user/findbyhost",{host:host},options,callback)},updateOrCreateByHost=function(host,user,callback){$log.debug("[UserService.updateOrCreateByHost]",host,routes);var options={method:"post",resultIsArray:!1};return JLSailsService.resolve("/user/updateOrCreateByHost",{host:host,user:user},options,callback)};return{save:save,subscribe:subscribe,remove:remove,findByHost:findByHost,updateOrCreateByHost:updateOrCreateByHost}}]),angular.module("jumplink.cms.bootstrap.uploader",["angularFileUpload"]).directive("jlUploader",function(){return{restrict:"E",templateUrl:"/views/modern/uploader.bootstrap.jade",scope:{label:"@",labelFiles:"@",uploadOptions:"=",fileOptions:"=",onCompleteAll:"=",onCompleteItem:"="},link:function($scope,$element,$attrs){},controller:["$rootScope","$scope","$log","FileUploader",function($rootScope,$scope,$log,FileUploader){$scope.files=[],angular.isUndefined($scope.fileOptions)&&($scope.fileOptions={}),$scope.uploader=new FileUploader($scope.uploadOptions),$log.debug("[jlUploader] uploadOptions",$scope.uploadOptions),$log.debug("[jlUploader] uploader",$scope.uploader),$log.debug("[jlUploader] onCompleteAll",$scope.onCompleteAll),$log.debug("[jlUploader] onCompleteItem",$scope.onCompleteItem),$scope.uploader.onCompleteItem=function(fileItem,response,status,headers){$log.debug("[jlUploader.onCompleteItem] status",status);for(var i=0;i<response.files.length;i++)$log.debug("[jlUploader.onCompleteItem] response.files[i]",response.files[i]);$scope.files=$scope.files.concat(response.files),angular.isFunction($scope.onCompleteItem)&&$scope.onCompleteItem(null,$scope.files)},$scope.uploader.onCompleteAll=function(){$log.debug("[jlUploader.onCompleteAll]"),angular.isFunction($scope.onCompleteAll)&&$scope.onCompleteAll(null,$scope.files)},$scope.upload=function(fileItem){fileItem.upload()},$scope.uploader.onProgressItem=function(fileItem,progress){$log.debug("[jlUploader.onProgressItem]",fileItem,progress)}}]}}),angular.module("jumplink.cms.utilities",[]).service("UtilityService",["$log",function($log){var invertOrder=function(array){for(var result=[],i=array.length-1;i>=0;i--)result.push(array[i]);return result},findKeyValue=function(objects,key,value){for(var index=-1,i=objects.length-1;i>=0&&-1>=index;i--)objects[i][key]===value&&(index=i);return index},getKeys=function(obj){var keys=[];if(!angular.isObject(obj))return console.error("[UtilityService.getKeys] is not an Object",obj),keys;for(var k in obj)keys.push(k);return keys},capitalizeFirstLetter=function(string){return string.charAt(0).toUpperCase()+string.slice(1).toLowerCase()},lowercaseFirstLetter=function(string){return string.charAt(0).toLowerCase()+string.slice(1)};return{invertOrder:invertOrder,findKeyValue:findKeyValue,getKeys:getKeys,capitalizeFirstLetter:capitalizeFirstLetter,lowercaseFirstLetter:lowercaseFirstLetter}}]),angular.module("jumplink.cms.bootstrap.validation",["jumplink.cms.validation"]).provider("jlValidationBootstrap",["jlValidationProvider","$validationProvider",function(jlValidationProvider,$validationProvider){this.setup=function(){$validationProvider.setErrorHTML(function(msg){return"<span ng-show='form.name.$error.required' class='form-control-feedback'><i class='fa fa-exclamation-triangle'></i></span><label class=\"control-label has-error absolute-control-label-bottom\">"+msg+"</label>"}),$validationProvider.setSuccessHTML(function(msg){return"<span class='form-control-feedback'><i class='fa fa-check'></i></span><label class=\"control-label has-success absolute-control-label-bottom\">"+msg+"</label>"}),angular.extend($validationProvider,{validCallback:function(element){$(element).parents(".form-group:first").removeClass("has-error").addClass("has-success")},invalidCallback:function(element){$(element).parents(".form-group:first").removeClass("has-success").addClass("has-error")}})},this.getLocale=jlValidationProvider.getLocale,this.changeLocale=jlValidationProvider.changeLocale,this.$get=function(){return new jlValidationBootstrap}}]),angular.module("jumplink.cms.validation",["validation","validation.rule"]).provider("jlValidation",["$validationProvider",function($validationProvider){this.getLocale=function(){var defaultMsg={minlength:$validationProvider.getDefaultMsg("minlength"),maxlength:$validationProvider.getDefaultMsg("maxlength"),required:$validationProvider.getDefaultMsg("required"),email:$validationProvider.getDefaultMsg("email"),number:$validationProvider.getDefaultMsg("number"),url:$validationProvider.getDefaultMsg("url")};return defaultMsg},this.changeLocale=function(lang){var defaultMsg={};switch(lang){case"de":defaultMsg={minlength:{error:"Eingabe muss länger sein!",success:"Eingabe lang genug"},maxlength:{error:"Eingabe muss kürzer sein!",success:"Eingabe kurz genug"},required:{error:"Eine Eingabe ist erforderlich!",success:"Okay"},email:{error:"Eingabe muss einer E-Mail entsprechen!",success:"Eingabe ist eine E-Mail"},number:{error:"Eingabe darf nur Zahlen enthalten!",success:"Eingabe enthält nur Zahlen"
},url:{error:"Eingabe muss einer URL entsprechen!",success:"Eingabe entspricht einer URL"}};break;case"en":}switch(lang){case"de":$validationProvider.setDefaultMsg(defaultMsg);break;case"en":}},this.$get=function(){return new jlValidation}}]),"undefined"==typeof jumplink)var jumplink={};jumplink.cms=angular.module("jumplink.cms",["ui.router","ngAnimate","ngSanitize","sails.io","webodf","FBAngular","mgcrea.ngStrap","angularMoment","angular-carousel","angular-medium-editor","ui.ace","leaflet-directive","toaster","angularFileUpload","angular-filters","ngDraggable","toggle-switch","ngAsync","ngFocus","jumplink.cms.history","jumplink.cms.content","jumplink.cms.content.medium","jumplink.cms.sortable","jumplink.cms.utilities","jumplink.cms.subnavigation","jumplink.cms.info","jumplink.cms.config","jumplink.cms.event","jumplink.cms.user","jumplink.cms.theme","jumplink.cms.gallery","jumplink.cms.admin","jumplink.cms.session","jumplink.cms.routes","jumplink.cms.sidebar","jumplink.cms.toolbar","jumplink.cms.browser","jumplink.cms.bootstrap.signin","angular-preload-image"]),jumplink.cms.run(["amMoment",function(amMoment){amMoment.changeLocale("de")}]),jumplink.cms.config(["$logProvider",function($logProvider){$logProvider.debugEnabled("development"===environment)}]),jumplink.cms.config(["jlRoutesProvider",function(jlRoutesProvider){var routeOptions={};jlRoutesProvider.html5Mode(!0),jlRoutesProvider.state("layout",{"abstract":!0,resolve:{authenticated:function(SessionService){return SessionService.isAuthenticated()}},templateUrl:"/views/modern/layout.jade",controller:"LayoutController"}),routeOptions.layoutHome={resolve:{navs:function(SubnavigationService){var statename="layout.home";return SubnavigationService.resolve(statename)},contents:function(ContentService){var statename="layout.home";return ContentService.resolveAll(statename,"dynamic")},news:function(ContentService){var statename="layout.home";return ContentService.resolveOne(statename,"news","fix")},events:function(EventService){var statename="layout.home";return EventService.resolve(statename)}},views:{content:{templateUrl:"/views/modern/home/content.jade",controller:"HomeContentController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"FooterController"}}},routeOptions.layoutMembers={resolve:{members:function($sailsSocket,$filter,$log){return $sailsSocket.get("/member").then(function(data){return $filter("orderBy")(data.data,"position")},function(resp){$log.error(resp)})}},views:{content:{templateUrl:"/views/modern/members/content.jade",controller:"MembersController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"FooterController"}}},routeOptions.layoutEvents={resolve:{events:function(EventService){var statename="layout.timeline";return EventService.resolve(statename)},config:function(ConfigService){var statename="layout.timeline";return ConfigService.resolve(statename)}},views:{content:{templateUrl:"/views/modern/events/timeline.jade",controller:"TimelineController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"FooterController"}}},routeOptions.layoutGallery={resolve:{navs:function(SubnavigationService){var statename="layout.gallery";return SubnavigationService.resolve(statename)},contents_images:function(ContentService){var statename="layout.gallery";return ContentService.resolveAllWithImage(statename)},config:function(ConfigService){var statename="layout.gallery";return ConfigService.resolve(statename)}},views:{content:{templateUrl:"/views/modern/gallery/content.jade",controller:"GalleryContentController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"FooterController"}}},routeOptions.layoutApplication={resolve:{application:function(ContentService){var statename="layout.application",name="application";return ContentService.resolveOne(statename,name)},config:function(ConfigService){var statename="layout.application";return ConfigService.resolve(statename)}},views:{content:{templateUrl:"/views/modern/application/content.jade",controller:"ApplicationController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"FooterController"}}},routeOptions.layoutLinks={resolve:{links:function(ContentService){var statename="layout.links",name="links";return ContentService.resolveOne(statename,name)}},views:{content:{templateUrl:"/views/modern/links/content.jade",controller:"LinksController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"FooterController"}}},routeOptions.layoutImprint={resolve:{navs:function(SubnavigationService){var statename="layout.imprint";return SubnavigationService.resolve(statename)},imprint:function(ContentService){var statename="layout.imprint",name="imprint";return ContentService.resolveOne(statename,name)},config:function(ConfigService){var statename="layout.imprint";return ConfigService.resolve(statename)}},views:{content:{templateUrl:"/views/modern/imprint/content.jade",controller:"ImprintController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"FooterController"}}},jlRoutesProvider.state("layout.admin",{resolve:{themeSettings:function($sailsSocket,$log){return $sailsSocket.get("/theme/find").then(function(data){return data.data},function(resp){$log.error(resp)})}},views:{content:{templateUrl:"/views/modern/administration/settings.jade",controller:"AdminController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"}}}),jlRoutesProvider.state("layout.users",{url:"/users",resolve:{users:function($sailsSocket,$log){return $sailsSocket.get("/user").then(function(data){return data.data},function(resp){$log.error(resp)})},routes:function(RoutesService){return RoutesService.find({})}},views:{content:{templateUrl:"/views/modern/administration/users.jade",controller:"UsersController"},toolbar:{templateUrl:"/views/modern/toolbar.jade",controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"ToolbarController"}}}),jlRoutesProvider.state("layout.gallery-fullscreen",{url:"/gallery/fs/:id",resolve:{image:function($sailsSocket,$stateParams,$log){return $log.debug("[config.routes] $stateParams",$stateParams),$sailsSocket.post("/gallery/findOne",{id:$stateParams.id}).then(function(data){return $log.debug("[config.routes] /gallery/findOne",{id:$stateParams.id},data),data.data})},config:function(ConfigService){var statename="layout.gallery-fullscreen";return ConfigService.resolve(statename)}},views:{content:{templateUrl:"/views/modern/gallery/fullscreen.jade",controller:"GalleryFullscreenController"},toolbar:{resolve:{routes:function(RoutesService){return RoutesService.find({})}},template:'<jl-toolbar data-routes="routes", data-title="title", data-shorttitle="shorttitle", data-position="position", data-fluid="fluid", data-name="name", data-filter="filter"></jl-toolbar>',controller:"ToolbarController"}}}),jlRoutesProvider.state("layout.user",{url:"/user/:index",resolve:{user:function($sailsSocket,$stateParams,$log){return $sailsSocket.get("/user/"+$stateParams.index).then(function(data){return delete data.data.password,data.data},function(resp){$log.error(resp)})},routes:function(RoutesService){return RoutesService.find({})}},views:{content:{templateUrl:"/views/modern/administration/user.jade",controller:"UserController"},toolbar:{templateUrl:"/views/modern/toolbar.jade",controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"ToolbarController"}}}),jlRoutesProvider.state("layout.new-user",{url:"/new/user",resolve:{user:function(){return{}},routes:function(RoutesService){return RoutesService.find({})}},views:{content:{templateUrl:"/views/modern/administration/user.jade",controller:"UserController"},toolbar:{templateUrl:"/views/modern/toolbar.jade",controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"ToolbarController"}}}),jlRoutesProvider.state("layout.cms",{url:"/cms",resolve:{info:function(CmsService,$log){return $log.debug("start get cms info"),CmsService.infoUser()},routes:function(RoutesService){return RoutesService.find({})}},views:{content:{templateUrl:"/views/modern/cms/content.jade",controller:"CmsController"},toolbar:{templateUrl:"/views/modern/toolbar.jade",controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"ToolbarController"}}}),routeOptions.layoutSignin={resolve:{routes:function(RoutesService){return RoutesService.find({})}},views:{content:{templateUrl:"/views/modern/signin.jade",controller:"SigninController"},toolbar:{templateUrl:"/views/modern/toolbar.jade",controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"ToolbarController"}}},routeOptions.layoutBrowser={resolve:{routes:function(RoutesService){return RoutesService.find({})},force:function($stateParams){return angular.isString($stateParams.force)?$stateParams.force:null}},views:{content:{templateUrl:"/views/modern/browser.jade",controller:"BrowserController"},toolbar:{templateUrl:"/views/modern/toolbar.jade",controller:"ToolbarController"},footer:{templateUrl:"/views/modern/footer.jade",controller:"ToolbarController"}}},jlRoutesProvider.setRoutes(routes,routeOptions)}]),jumplink.cms.run(["$rootScope","$state","$window","$log",function($rootScope,$state,$window,$log){$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){$log.error("[config/routes.js] Error",error),$state.go("layout.signin",{error:error})})}]),jumplink.cms.run(["amMoment",function(amMoment){amMoment.changeLocale("de")}]),jumplink.cms.controller("AdminController",["$scope","themeSettings","$log","ThemeService",function($scope,themeSettings,$log,ThemeService){$scope.themeSettings=themeSettings,$scope.save=function(){ThemeService.save($scope.themeSettings.available,function(data){$log.debug(data)})}}]),jumplink.cms.controller("AppController",["$rootScope","$scope","$state","$window","$timeout","Fullscreen","toaster","$sailsSocket","$location","HistoryService","$log",function($rootScope,$scope,$state,$window,$timeout,Fullscreen,toaster,$sailsSocket,$location,HistoryService,$log){$scope.$on("$stateChangeSuccess",function(){HistoryService.autoScroll()}),$rootScope.pop=function(type,title,body,timeout,bodyOutputType,clickHandler){toaster.pop(type,title,body,timeout,bodyOutputType,clickHandler)};var generalSubscribes=function(){$sailsSocket.post("/session/subscribe",{}).success(function(data,status,headers,config){$sailsSocket.subscribe("connect",function(msg){$log.debug("socket.io is connected")}),$sailsSocket.subscribe("disconnect",function(msg){$rootScope.pop("error","Verbindung zum Server verloren","")}),$sailsSocket.subscribe("reconnect",function(msg){$rootScope.pop("info","Sie sind wieder mit dem Server verbunden","")})})},adminSubscribes=function(){$sailsSocket.post("/session/subscribe",{}).success(function(data,status,headers,config){$sailsSocket.subscribe("email",function(email){var body='<dl><dt>Absender</dt><dd><a href="mailto:'+email.from+'">'+email.from+"</a></dd><dt>Betreff</dt><dd>"+email.subject+"</dd>";email.attachments&&(body+="<dt>Anhänge</dt><dd>"+email.attachments.length+"</dd>"),body+="</dl>",$rootScope.pop("info","Eine E-Mail wurde versendet.",body,null,"trustedHtml")}),$sailsSocket.subscribe("admins",function(msg){$log.debug(msg)})})};$rootScope.$watch("authenticated",function(newValue){$scope.authenticated=newValue,$log.debug("[AppController] authenticated changed ",$rootScope.authenticated,$scope.authenticated,newValue),$rootScope.authenticated?($rootScope.mainStyle={"padding-bottom":"50px"},$rootScope.toasterPositionClass="toast-bottom-right-with-toolbar",adminSubscribes()):($rootScope.mainStyle={"padding-bottom":"0px"},$rootScope.toasterPositionClass="toast-bottom-right")}),generalSubscribes(),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){switch($rootScope.loadclass="finish",toState.name){case"layout.home":$rootScope.bodyclass="home";break;case"layout.gallery":$rootScope.bodyclass="gallery";break;case"layout.gallery-slider":$rootScope.bodyclass="gallery-slider";break;default:$rootScope.bodyclass=toState.name}}),$rootScope.getWindowDimensions=function(){return{height:angular.element($window).height(),width:angular.element($window).width()}},angular.element($window).bind("resize",function(){}),angular.element($window).onresize&&(angular.element($window).onresize=function(event){$timeout(function(){$rootScope.$apply()})}),angular.element($window).bind("orientationchange",function(){$timeout(function(){$rootScope.$apply()})}),angular.element($window).bind("deviceorientation",function(){$timeout(function(){$rootScope.$apply()})}),$rootScope.$watch($rootScope.getWindowDimensions,function(newValue,oldValue){$rootScope.windowHeight=newValue.height,$rootScope.windowWidth=newValue.width,$timeout(function(){$rootScope.$apply()})},!0),$rootScope.logout=function(){$sailsSocket.post("/session/destroy",{}).success(function(data,status,headers,config){$rootScope.authenticated=!1,$rootScope.pop("success","Erfolgreich abgemeldet","")})},$scope.goToState=$state.go}]),jumplink.cms.controller("ApplicationController",["$rootScope","$scope","$sailsSocket","moment","$filter","application","config","$state","$log",function($rootScope,$scope,$sailsSocket,moment,$filter,application,config,$state,$log){var page=$state.current.name,date=moment();$scope.html=!1,$scope.application=application,$scope.member={datum:$filter("amDateFormat")(date,"dddd, Do MMMM YYYY"),name:null,vorname:null,geburtstag:null,geburtsort:null,email:null,telefon:null,beruf:null,strasse:null,plz:null,ort:null,bank:{name:null,iban:null,bic:null}},$scope.minYearsOld=10,$scope.minBirthdayDate=moment().subtract($scope.minYearsOld,"years"),$scope.maxYearsOld=100,$scope.maxBirthdayDate=moment().subtract($scope.maxYearsOld,"years"),$scope.upload=function(){var cc=config.email,to=$scope.member.email,from=$scope.member.email,subject="Aufnahmeantrag von "+$scope.member.vorname+" "+$scope.member.name,html='<dl><dt>Absender</dt><dd><a href="mailto:'+from+'">'+from+"</a></dd><dt>Betreff</dt><dd>"+subject+"</dd></dl><br>Bitte drucken Sie den Aufnahmeantrag aus und schicken Sie ihn an den Nautischen Verein Cuxhaven e.V.",text=String(html).replace(/<[^>]+>/gm,""),attachmentFilename="aufnahmeantrag_"+$scope.member.vorname+"_"+$scope.member.name;attachmentFilename=attachmentFilename.toLowerCase(),$rootScope.pop("info","Aufnahmeantrag wird bearbeitet"),$scope.webodf.refresh(function(){$scope.webodf.upload(function(error,response){error&&$log.debug(error);var odtFilename=response.files[0].uploadedAs,odtPath=response.files[0].fd;$sailsSocket.put("/document/convert/",{filename:odtFilename,extension:"pdf"}).success(function(data,status,headers,config){var pdfPath=data.target;$sailsSocket.put("/document/convert/",{filename:odtFilename,extension:"html"}).success(function(data,status,headers,config){$rootScope.pop("success","Aufnahmeantrag erfolgreich erzeugt");var htmlPath=data.target;$sailsSocket.post("/email/send",{from:from,to:to+","+cc,subject:subject,text:text,html:html,attachments:[{filename:attachmentFilename+".pdf",path:pdfPath},{filename:attachmentFilename+".html",path:htmlPath},{filename:attachmentFilename+".odt",path:odtPath}]}).success(function(data,status,headers,config){$rootScope.authenticated||$rootScope.pop("success","E-Mail wurde versendet.")})})})})})},$scope.download=function(){$scope.webodf.refresh(function(){$scope.webodf.download("Aufnahmeantrag.odt")})},$scope.refresh=function(){$scope.webodf.refresh(function(){$rootScope.pop("success","Aufnahmeantrag wurde aktualisiert")})};var onWebODFReady=function(){};$scope.webodf={ready:onWebODFReady},$sailsSocket.subscribe("content",function(msg){switch($log.debug(msg),msg.verb){case"updated":switch(msg.id){case"application":$scope.application=msg.data,$rootScope.authenticated&&$rootScope.pop("success","Aufnahmeantrags-Text wurde aktualisiert","")}}}),$scope.toogleHtml=function(){$scope.html=!$scope.html},$scope.save=function(){$scope.application.page=page,$sailsSocket.put("/content/replace",$scope.application,function(response){null!==response&&"undefined"!=typeof response?$log.debug(response):$log.debug("Can't save site")})}}]),jumplink.cms.controller("BrowserController",["$scope","$log","force",function($scope,$log,force){$scope.force=force}]),jumplink.cms.controller("CmsController",["$rootScope","$scope","info","$location","$anchorScroll","$state","$log",function($rootScope,$scope,info,$location,$anchorScroll,$state,$log){$state.current.name;$scope.info=info,$scope.goTo=function(hash){$location.hash(hash),$anchorScroll.yOffset=60,$anchorScroll()}}]),jumplink.cms.controller("FooterController",["$scope",function($scope){}]),jumplink.cms.controller("GalleryContentController",["$rootScope","$scope","$state","Fullscreen","$sailsSocket","$stateParams","contents_images","navs","config","$modal","$log","$location","SortableService","GalleryService","ContentService","SubnavigationService","HistoryService",function($rootScope,$scope,$state,Fullscreen,$sailsSocket,$stateParams,contents_images,navs,config,$modal,$log,$location,SortableService,GalleryService,ContentService,SubnavigationService,HistoryService){$scope.images=contents_images.images,$scope.config=config,$scope.contents=contents_images.contents,$scope.navs=navs,$scope.html=ContentService.getShowHtml(),$scope.dropdown=GalleryService.getDropdown(),$scope.goTo=HistoryService.goToHashPosition;var page=$state.current.name;GalleryService.setEditModal($scope);var imageOptions={path:config.paths.gallery,thumbnail:{path:config.paths.gallery,width:300},rescrop:{path:config.paths.gallery,width:1200,cropwidth:1200,cropheight:1200}};GalleryService.setUploadModal($scope,$scope.images,$scope.contents,imageOptions,function(uploadModal){$log.debug("[GalleryContentController.uploadModalSetted]")},function(response,status,headers){$log.debug("[GalleryContentController.onCompleteCallback]",response,status,headers)}),GalleryService.subscribe(),ContentService.setEditModal($scope),ContentService.subscribe(),SubnavigationService.setEditModal($scope),SubnavigationService.subscribe(),$scope.toogleHtml=function(){$scope.html=ContentService.toogleShowHtml($scope.contents)},$scope.removeContent=function(index,content){$rootScope.authenticated&&ContentService.remove($scope.contents,index,content,page,function(err,contents){err?($log.error("Error: On remove content!",err),$rootScope.pop("error","Inhaltsblock konnte nicht entfernt werden","")):SubnavigationService.removeByTarget($scope.navs,content.name,page,function(err,navs){err?($log.error("Error: On remove subnavigation!",err),$rootScope.pop("error","Subnavigation konnte nicht entfernt werden","")):$rootScope.pop("success","Erfolgreich entfernt","")})})},$scope.removeImage=function(image){$log.debug("removeImage","image",image),$rootScope.authenticated&&GalleryService.remove($scope.images[image.content],null,image,page,function(err,images){err?($log.error("Error: On remove content!",err),$rootScope.pop("error","Bild konnte nicht entfernt werden","")):($rootScope.pop("success","Bild wurde entfernt",""),$scope.images[content.name]=images)})},$scope.removeNav=function(index,nav){$rootScope.authenticated&&SubnavigationService.remove($scope.navs,index,nav,page,function(err,navs){err?$log.error("Error: On remove subnavigation!",err):($log.debug("remove done!"),$scope.navs=navs)})};var addImage=function(){$rootScope.authenticated&&GalleryService.add($scope.images,$scope.contents,function(err){err&&$log.error("Error: On image content!",err),$scope.save()})},addContent=function(){var errors=["Error: Konnte Inhaltsblock nicht erzeugen","Error: Konnte Inhaltsblock nicht hinzufügen","Error: Konnte subnavigation nicht hinzufügen","Error: Konnte Bilderblock nicht hinzufügen"],successes=["Neuen Inhaltsblock erfolgreich hinzugefügt","Neue Subnavigation erfolgreich hinzugefügt","Neuen Bilderblock erfolgreich hinzugefügt","Neuen Block erfolgreich hinzugefügt"];$rootScope.authenticated&&ContentService.createEdit($scope.contents,page,function(err,content){err?($log.error(errors[0],err),$rootScope.pop("error",errors[0],err),$scope.$apply()):ContentService.append($scope.contents,content,function(err,contents){err?($log.error(errors[1],err),$scope.$apply()):($scope.$apply(),SubnavigationService.append($scope.navs,{page:page,target:content.name,name:content.title},function(err,navs){err?($log.error(errors[2],err),$rootScope.pop("error",errors[2],err)):($scope.$apply(),GalleryService.addBlock($scope.images,content,function(err,imageBock){err?($log.error(errors[3],err),$rootScope.pop("error",errors[3],err)):($rootScope.pop("success",successes[3],content.name),$scope.$apply())}))}))})})};$scope.addNav=function(){$rootScope.authenticated&&SubnavigationService.append($scope.navs,{page:page},function(err,navs){err&&$log.error("Error: On add subnavigation!",err)})},$scope.moveForwardContent=function(index,content){SortableService.moveForward(index,$scope.contents,function(err,contents){err?$log.error("Error: On move content forward!",err):$scope.contents=contents})},$scope.moveForwardNav=function(index,nav){SortableService.moveForward(index,$scope.navs,function(err,navs){err?$log.error("Error: On move subnavigation forward!",err):$scope.navs=navs})},$scope.moveBackwardContent=function(index,content){SortableService.moveBackward(index,$scope.contents,function(err,contents){err?$log.error("Error: On move content backward!",err):$scope.contents=contents})},$scope.moveBackwardNav=function(index,nav){SortableService.moveBackward(index,$scope.navs,function(err,navs){err?$log.error("[GalleryContentController.js] Error: On move content backward!",err):$scope.navs=navs})},$scope.editImage=GalleryService.edit,$scope.editContent=function(index,content){$rootScope.authenticated&&ContentService.edit(content,function(err,newContent){err?$log.error("[GalleryContentController.js] Error: On edit content!",err):(content=newContent,$scope.save())})},$scope.editNavs=function(navs){$rootScope.authenticated&&SubnavigationService.edit(navs,function(err){err&&$log.error("[GalleryContentController.js] Error: On edit subnavigations!",err)})},$scope.saveImage=function(image){$rootScope.authenticated&&angular.isDefined(image)&&GalleryService.saveOne(image,page,image.name,function(err,image){err?($log.error(err,image),$rootScope.pop("error",err,image)):$rootScope.pop("success","Bild wurde aktualisiert","")})},$scope.save=function(){$rootScope.authenticated&&GalleryService.saveAllBlocks($scope.images,page,function(err,images){err?($log.error(err,images),$rootScope.pop("error",err,images)):($log.debug("Bilder wurden aktualisiert",images),ContentService.save($scope.contents,page,function(err,contents){return err?($log.error("Error: On save content!",err),cb?cb(err):err):($log.debug("Contentblocks wurden aktualisiert",contents),void SubnavigationService.save($scope.navs,page,function(err,navs){return err?($log.error("Error: On save subnavigations!",err),cb?cb(err):err):($log.debug("Subnavigation wurde aktualisiert",contents),void $rootScope.pop("success","Galerie wurde gespeichert",""))}))}))})},$scope.stopPropagation=function(event){event.stopPropagation()},$scope.goToImage=function(image){$state.go("layout.gallery-fullscreen",{id:image.id})},$scope.onDragOnImageComplete=function(index,image,evt,content){null===image&&($log.debug("*click*",index),image=$scope.images[content.name][index],$scope.goToImage(image))},$scope.onDropOnImageComplete=function(dropimageindex,dragimage,evt,content){SortableService.dropMove($scope.images[content.name],dropimageindex,dragimage,evt,function(err,images){$scope.images[content.name]=images,$scope.save()},SortableService.move)},$scope.onDropOnAreaComplete=function(image,evt,content){if($log.debug("onDropOnAreaComplete"),null!==image&&image.content!=content.name){$log.debug("Move image from one content block to another:\n	"+image.content+" => "+content.name);var content_from=image.content,content_to=content.name;SortableService.moveObjectToAnotherArray(image,null,$scope.images[content_from],$scope.images[content_to],function(err,result){err?$rootScope.pop("error","Bild konnte nicht verschoben werden",err):result.array_to[result.index_to].content=content_to,$scope.save(),$scope.$apply()})}else $log.debug("Move image within the content block:\n	"+content.name)},$scope.onDragOnNavComplete=function(index,nav,evt){null===nav&&$log.debug("*click*",index),$log.debug("onDragOnNavComplete, nav:",nav,"index",index)},$scope.onDropOnNavComplete=function(dropnavindex,dragnav,event){SortableService.dropMove($scope.navs,dropnavindex,dragnav,event,function(err,navs){$scope.navs=navs})},$scope.onDropOnAreaComplete=function(nav,evt){$scope.navs.indexOf(nav)},$scope.addDropdownActions={addImage:addImage,addContent:addContent},$scope.addDropdown=[{text:'<i class="fa fa-file-image-o"></i>&nbsp;Bild',click:"addDropdownActions.addImage()"},{text:'<i class="fa fa-header"></i>&nbsp;Überschrift',click:"addDropdownActions.addContent()"}]}]),jumplink.cms.controller("GalleryFullscreenController",["$scope","$log","image","config",function($scope,$log,image,config){$scope.image=image,$scope.config=config,$log.debug("[GalleryFullscreenController] image",image)}]),jumplink.cms.controller("GallerySlideController",["$scope","$sailsSocket","$stateParams","$timeout","images","$log",function($scope,$sailsSocket,$stateParams,$timeout,images,$log){$scope.images=images;var setSlide=function(){"undefined"!=typeof $stateParams.slideIndex?$scope.slideIndex!==$stateParams.slideIndex&&($scope.slideIndex=$stateParams.slideIndex):0!==$scope.slideIndex&&($scope.slideIndex=0)};$timeout(function(){setSlide()},1e3)}]),jumplink.cms.controller("HomeContentController",["$rootScope","$scope","$window","contents","navs","events","news","$state","$log","$modal","HistoryService","ContentService","SubnavigationService","SortableService",function($rootScope,$scope,$window,contents,navs,events,news,$state,$log,$modal,HistoryService,ContentService,SubnavigationService,SortableService){var page=$state.current.name;$scope.contents=contents,$scope.news=news,$scope.navs=navs,$scope.events=events,ContentService.setEditModal($scope),SubnavigationService.setEditModal($scope),$scope.goTo=HistoryService.goToHashPosition,$scope.html=ContentService.getShowHtml(),ContentService.subscribe(),SubnavigationService.subscribe(),SubnavigationService.resizeOnImagesLoaded(),$scope.toogleHtml=function(){$scope.html=ContentService.toogleShowHtml($scope.contents)},$scope.addContent=function(){var errors=["Error: Konnte Inhaltsblock nicht erzeugen","Error: Konnte Inhaltsblock nicht hinzufügen"],successes=["Neuen Inhaltsblock erfolgreich hinzugefügt","Neue Subnavigation erfolgreich hinzugefügt","Neuen Block erfolgreich hinzugefügt"];$rootScope.authenticated&&ContentService.createEdit($scope.contents,page,function(err,content){err?($log.error(errors[0],err),$rootScope.pop("error",errors[0],err),$scope.$apply()):ContentService.append($scope.contents,content,function(err,contents){err?($log.error(errors[1],err),$rootScope.pop("error",errors[1],err),$scope.$apply()):($scope.$apply(),SubnavigationService.append($scope.navs,{page:page,target:content.name,name:content.title},function(err,navs){err?($log.error(errors[2],err),$rootScope.pop("error",errors[2],err)):($rootScope.pop("success",successes[2],content.title),$scope.$apply())}))})})},$scope.addNav=function(){$rootScope.authenticated&&SubnavigationService.add($scope.navs,{page:page},function(err,navs){err&&$log.error("Error: On add navs!",err),$log.debug("add navs done!",navs)})},$scope.moveForward=function(index,content){SortableService.moveForward(index,$scope.contents,function(err,contents){err?$log.error("Error: On move content forward!",err):$scope.contents=contents})},$scope.moveForwardNav=function(index,nav){SortableService.moveForward(index,$scope.navs,function(err,navs){err?$log.error("Error: On move subnavigation forward!",err):$scope.navs=navs})},$scope.moveBackward=function(index,content){SortableService.moveBackward(index,$scope.contents,function(err,contents){err?$log.error("Error: On move content backward!",err):$scope.contents=contents})},$scope.moveBackwardNav=function(index,nav){SortableService.moveBackward(index,$scope.navs,function(err,navs){err?$log.error("Error: On move content backward!",err):$scope.navs=navs})},$scope.edit=function(index,content){$rootScope.authenticated&&ContentService.edit(content,function(err,content){err&&("discarded"===err?$log.warn("Edit content ",err):$log.error("Error: On edit content!",err))})},$scope.editNavs=function(navs){$rootScope.authenticated&&SubnavigationService.edit(navs,function(err){err&&$log.error("[HomeContentController.js] Error: On edit subnavigations!",err)})},$scope.remove=function(index,content){$rootScope.authenticated&&ContentService.remove($scope.contents,index,content,page,function(err,contents){err?($log.error("Error: On remove content!",err),$rootScope.pop("error","Inhaltsblock konnte nicht entfernt werden","")):($rootScope.pop("success","Inhaltsblock wurde entfernt",""),SubnavigationService.removeByTarget($scope.navs,content.name,page,function(err,navs){err?($log.error("Error: On remove subnavigation!",err),$rootScope.pop("error","Subnavigation konnte nicht entfernt werden","")):$rootScope.pop("success","Subnavigation wurde entfernt","")}))})},$scope.removeNav=function(index,nav){$rootScope.authenticated&&SubnavigationService.remove($scope.navs,index,nav,page,function(err,navs){err?$log.error("Error: On remove subnavigation!",err):($log.debug("remove done!"),
$scope.navs=navs)})},$scope.save=function(index,content){$rootScope.authenticated&&saveAll(function(err,result){err?($log.error("Error: On save all!",err),$rootScope.pop("error","Seite konnte nicht gespeichert werden",err)):$rootScope.pop("success","Seite wurde gespeichert","")})},$scope.refresh=function(cb){ContentService.refresh($scope.contents,cb)};var saveAll=function(cb){$rootScope.authenticated&&($log.debug("Save news"),ContentService.saveOne($scope.news,page,function(err,content){return err?($log.error("Error: On save content!",err),cb?cb(err):err):($log.debug("Save other contents"),void ContentService.save($scope.contents,page,function(err,contents){return err?($log.error("Error: On save content!",err),cb?cb(err):err):($scope.contents=contents,$log.debug("Save subnavigation"),void SubnavigationService.save($scope.navs,page,function(err,navs){return err?($log.error("Error: On save navigation!",err),cb?cb(err):err):($scope.navs=navs,void(cb&&cb(null,{contents:contents,navs:navs})))}))}))}))};$scope.onDragOnNavComplete=function(index,nav,evt){null===nav&&$log.debug("*click*",index),$log.debug("onDragOnNavComplete, nav:",nav,"index",index)},$scope.onDropOnNavComplete=function(dropnavindex,dragnav,event){SortableService.dropMove($scope.navs,dropnavindex,dragnav,event,function(err,navs){$scope.navs=navs})},$scope.onDropOnAreaComplete=function(nav,evt){$scope.navs.indexOf(nav)}}]),jumplink.cms.controller("ImprintController",["$rootScope","$scope","$sailsSocket","imprint","navs","config","$location","$anchorScroll","$state","$log","ContentService",function($rootScope,$scope,$sailsSocket,imprint,navs,config,$location,$anchorScroll,$state,$log,ContentService){var page=$state.current.name;$scope.imprint=imprint,$scope.navs=navs,$scope.email={from:null,name:null,subject:null,content:null},$rootScope.$watch("authenticated",function(newVal,oldVal){$scope.authenticated=$rootScope.authenticated}),$scope.goTo=function(hash){$location.hash(hash),$anchorScroll.yOffset=60,$anchorScroll()},$scope.toogleHtml=function(){$scope.html=!$scope.html},$scope.save=function(){$scope.imprint.name="imprint",ContentService.saveOne($scope.imprint,page,function(err,imprint){return err?($log.error("Error: On save content!",err),angular.isDefined(cb)?cb(err):err):void $rootScope.pop("success","Content wurde aktualisiert","")}),$sailsSocket.put("/navigation/replaceall",{navs:$scope.navs,page:page}).success(function(data,status,headers,config){null!==data&&"undefined"!=typeof data?$log.debug(data):$log.debug("Can't save site")})},$scope.sendMail=function(){var cc=$scope.email.from,to=config.email,from=$scope.email.from,subject="Kontaktanfrage von "+$scope.email.name+": "+$scope.email.subject,html='<dl><dt>Absender</dt><dd><a href="mailto:'+$scope.email.from+'">'+$scope.email.from+"</a></dd><dt>Betreff</dt><dd>"+$scope.email.subject+"</dd></dl><br>"+$scope.email.content,text=String(html).replace(/<[^>]+>/gm,"");$sailsSocket.post("/email/send",{from:from,to:to+","+cc,subject:subject,text:text,html:html}).success(function(data,status,headers,config){$rootScope.authenticated||$rootScope.pop("success","E-Mail wurde versendet."),$log.debug(data)})},angular.extend($scope,{nvc:{lat:53.86411893791266,lng:8.70941162109375,zoom:14},markers:{main_marker:{lat:53.86682040225137,lng:8.706825971603394,focus:!0,title:"Nautischer Verein Cuxhaven e.V.",draggable:!1,label:{message:"<a target='_blank' title='Anfahrt' href='https://www.google.de/maps/dir//Kapit%C3%A4n-Alexander-Stra%C3%9Fe+40,+27472+Cuxhaven/@53.8668035,8.7066221,17z/data=!4m13!1m4!3m3!1s0x47b4040e075eaf1f:0xfaba82b12994a2e!2sKapit%C3%A4n-Alexander-Stra%C3%9Fe+40,+27472+Cuxhaven!3b1!4m7!1m0!1m5!1m1!1s0x47b4040e075eaf1f:0xfaba82b12994a2e!2m2!1d8.7066221!2d53.8668035?hl=de'>Nautischer Verein Cuxhaven e.V.<br>Kapti&auml;n-Alexander-Str. 40<br>27472 Cuxhaven</a>",options:{noHide:!0}}}}}),$sailsSocket.subscribe("content",function(msg){switch($log.debug(msg),msg.verb){case"updated":switch(msg.id){case"imprint":$scope.imprint=msg.data,$rootScope.authenticated&&$rootScope.pop("success","Impressums-Text wurde aktualisiert","")}}})}]),jumplink.cms.controller("LayoutController",["$rootScope","$log","authenticated",function($rootScope,$log,authenticated){$rootScope.authenticated=authenticated===!0,$log.debug("[LayoutController] authenticated",$rootScope.authenticated,authenticated)}]),jumplink.cms.controller("LinksController",["$rootScope","$scope","$sailsSocket","links","$location","$anchorScroll","$state","$log",function($rootScope,$scope,$sailsSocket,links,$location,$anchorScroll,$state,$log){var page=$state.current.name;$scope.links=links,$log.debug($scope.links),$scope.goTo=function(hash){$location.hash(hash),$anchorScroll.yOffset=60,$anchorScroll()},$scope.toogleHtml=function(){$scope.html=!$scope.html},$scope.save=function(){$scope.links.page=page,$scope.links.name="links",ContentService.saveOne($scope.links,page,function(err,links){return err?($log.error("Error: On save content!",err),angular.isDefined(cb)?cb(err):err):void $rootScope.pop("success","Content wurde aktualisiert","")})},$sailsSocket.subscribe("content",function(msg){switch($log.debug(msg),msg.verb){case"updated":switch(msg.id){case"links":$scope.links=msg.data,$rootScope.authenticated&&$rootScope.pop("success","Links-Text wurde aktualisiert","")}}})}]),jumplink.cms.controller("MembersController",["$rootScope","$scope","members","$sailsSocket","$filter","$modal","FileUploader","$log",function($rootScope,$scope,members,$sailsSocket,$filter,$modal,FileUploader,$log){$scope.uploader=new FileUploader({url:"member/upload",removeAfterUpload:!0}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}});var editMemberModal=$modal({scope:$scope,title:"Person bearbeiten",uploader:$scope.uploader,templateUrl:"/views/modern/members/editmodal.jade",show:!1});$scope.upload=function(fileItem,member){fileItem.member=member,fileItem.upload()},$scope.uploader.onCompleteItem=function(fileItem,response,status,headers){fileItem.member.image=response.files[0].thumb};var removeFromClient=function(member){var index=$scope.members.indexOf(member);index>-1&&$scope.members.splice(index,1)};$scope.abort=function(hide){hide()},$scope.members=members,$scope.remove=function(member,hide){$rootScope.authenticated&&$scope.members.length>2&&(member.id?($log.debug(member),$sailsSocket["delete"]("/member/"+member.id).success(function(users,status,headers,config){removeFromClient(member)})):removeFromClient(member)),hide()},$scope.add=function(){if($rootScope.authenticated){angular.isArray($scope.members)||($scope.members=[]);var newMember={position:$scope.members.length||0,name:"",job:"",image:"photo.png",site:$scope.members[$scope.members.length-1].site};$scope.members.push(newMember),$scope.edit(newMember)}};var saveMember=function(member,cb){angular.isUndefined(member.id)?$sailsSocket.post("/member",member).success(function(data,status,headers,config){angular.isArray(data)&&(data=data[0]),$log.debug(data),cb&&cb(null,data)}):$sailsSocket.put("/member/"+member.id,member).success(function(data,status,headers,config){angular.isArray(data)&&(data=data[0]),$log.debug(data),cb&&cb(null,data)})};$scope.save=function(member,hide){$rootScope.authenticated&&(angular.isUndefined(member)?angular.forEach($scope.members,function(member,index){saveMember(member,function(err,result){err?$rootScope.pop("error",member.name,"Konnte Mitglied nicht speichern.",member.name):$rootScope.pop("success","Mitglied erfolgreich auf dem Server gespeichert.",member.name)})}):saveMember(member,function(err,result){err?$rootScope.pop("error",member.name,"Konnte Mitglied nicht speichern.",member.name):$rootScope.pop("success","Mitglied erfolgreich auf dem Server gespeichert.",member.name)})),hide()},$scope.edit=function(member){$rootScope.authenticated&&(editMemberModal.$scope.member=member,editMemberModal.$promise.then(editMemberModal.show))},$scope.moveForward=function(member){if($rootScope.authenticated){var index=$scope.members.indexOf(member);if(index<$scope.members.length&&angular.isDefined($scope.members[index+1])){var newPosition=$scope.members[index+1].position,oldPosition=$scope.members[index].position;$log.debug(newPosition+" <-> "+oldPosition),$scope.members[index].position=newPosition,$scope.members[index+1].position=oldPosition,$scope.members=$filter("orderBy")($scope.members,"position")}else $rootScope.pop("error",member.name,"Kann nicht verschoben werden.")}},$scope.moveBackward=function(member){if($rootScope.authenticated){var index=$scope.members.indexOf(member);if(index>0&&angular.isDefined($scope.members[index-1])){var newPosition=$scope.members[index-1].position,oldPosition=$scope.members[index].position;$log.debug(newPosition+" <-> "+oldPosition),$scope.members[index].position=newPosition,$scope.members[index-1].position=oldPosition,$scope.members=$filter("orderBy")($scope.members,"position")}else $rootScope.pop("error",member.name,"Kann nicht verschoben werden.")}},$sailsSocket.subscribe("member",function(msg){switch($log.debug(msg),msg.verb){case"updated":$rootScope.authenticated&&$rootScope.pop("success","Eine Person wurde aktualisiert",msg.data.name);break;case"created":$rootScope.authenticated&&$rootScope.pop("success","Eine Person wurde erstellt",msg.data.name);break;case"removedFrom":$rootScope.authenticated&&$rootScope.pop("success","Eine Person wurde entfernt",msg.id);break;case"destroyed":$rootScope.authenticated&&$rootScope.pop("success","Eine Person wurde gelöscht",msg.id);break;case"addedTo":$rootScope.authenticated&&$rootScope.pop("success","Eine Person wurde hinzugefügt",msg.data.name)}})}]),jumplink.cms.controller("SigninController",["$rootScope","$scope","$log","$stateParams","SigninService","$state","HistoryService",function($rootScope,$scope,$log,$stateParams,SigninService,$state,HistoryService){$scope.error=$stateParams.error,$scope.signin=function(){$log.debug($scope.user),SigninService.signin($scope.user,!0,!0,$rootScope,function(error,result){return error?($scope.error=error,$scope.error):($rootScope.authenticated=result.authenticated,$rootScope.user=result.user,$rootScope.site=result.site,void $log.debug("[SigninController.signin]",result))})}}]),jumplink.cms.controller("TimelineController",["$rootScope","$scope","events","config","EventService","$state","HistoryService","$log","$window",function($rootScope,$scope,events,config,EventService,$state,HistoryService,$log,$window){var page=$state.current.name;$scope.events=events,$scope.config=config,$scope.goTo=HistoryService.goToHashPosition,$scope.chooseType=EventService.chooseType;EventService.setModals($scope,{},page);EventService.subscribe(),$scope.openAttachment=function(path){$window.open(path,"_blank")},$scope.save=function(event,eventBlockName){var errors=["TimelineController: Can't save event.","TimelineController: Can't save eventBlocks."],sussces=["Ereignis wurde auf dem Server gespeichert.","Timeline wurde auf dem Server gespeichert."];$rootScope.authenticated&&(angular.isDefined(event)&&angular.isDefined(eventBlockName)?EventService.saveOne($scope.events,eventBlockName,event,function(err,savedEvent){err?$log.error(errors[0],err):(event=savedEvent,$log.debug(sussces[0],event),$rootScope.pop("success",sussces[0],event.title))}):EventService.saveBlocks($scope.events,function(err,savedEvents){err?$log.error(errors[1],err):($scope.events=savedEvents,$log.debug(sussces[1],events),$rootScope.pop("success",sussces[1],""))}))},$scope.add=function(){var errors=["Error: Konnte Ereignis nicht erzeugen","Error: Konnte Ereignis nicht hinzufügen"],successes=["Neues Ereignis erfolgreich hinzugefügt"];$rootScope.authenticated&&EventService.createEdit($scope.events,{page:page},function(err,event){err?($log.error(errors[0],err),$rootScope.pop("error",errors[0],err),$scope.$apply()):($log.debug("start append"),EventService.append($scope.events,event,function(err,events){err?($log.error(errors[1],err),$rootScope.pop("error",errors[1],err),$scope.$apply()):($scope.events=events,$rootScope.pop("success",successes[0],event.title),$scope.$apply())}))})};$scope.remove=function(event,eventBlockName){$rootScope.authenticated&&EventService.remove($scope.events,event,eventBlockName,function(err,events){err?($log.error(err),$rootScope.pop("error","Ereignis konnte nicht entfernt werden.",event.name)):$rootScope.pop("success","Ereignis erfolgreich entfernt","")})},$scope.refresh=function(){$scope.events=EventService.refresh($scope.events)},$scope.edit=function(event,eventBlockName){$rootScope.authenticated&&EventService.edit(event,eventBlockName,function(err,event){return err?"discarded"===err?($log.debug("Edit event ",err),"discarded"):($log.error("Error: On edit event!",err),err):void $scope.save(event,eventBlockName)})},$scope.openTypeChooserModal=function(event){$rootScope.authenticated&&EventService.openTypeChooserModal(event)}}]),jumplink.cms.controller("ToolbarController",["$scope","$log","routes",function($scope,$log,routes){$scope.routes=routes,$scope.title="JumpLink CMS Administration",$scope.shorttitle="Admin",$scope.position="fixed-top",$scope.fluid=!1,$scope.filter={navbar:"header"}}]),jumplink.cms.controller("UserController",["$scope","user","$state","$log","UserService",function($scope,user,$state,$log,UserService){$scope.user=user,$scope.save=function(user){angular.isUndefined(user)&&(user=$scope.user),UserService.save(user,function(err,user){$state.go("layout.users")})},UserService.subscribe()}]),jumplink.cms.controller("UsersController",["$scope","$rootScope","$sailsSocket","users","$log","UserService",function($scope,$rootScope,$sailsSocket,users,$log,UserService){$scope.users=users,$scope.remove=function(user){UserService.remove($scope.users,user)},UserService.subscribe()}]),jumplink.cms.directive("match",function(){return{require:"ngModel",restrict:"A",scope:{match:"="},link:function(scope,elem,attrs,ctrl){scope.$watch(function(){var modelValue=ctrl.$modelValue||ctrl.$$invalidModelValue;return ctrl.$pristine&&angular.isUndefined(modelValue)||scope.match===modelValue},function(currentValue){ctrl.$setValidity("match",currentValue)})}}}),jumplink.cms.directive("ngThumb",["$window",function($window){var helper={support:!(!$window.FileReader||!$window.CanvasRenderingContext2D),isFile:function(item){return angular.isObject(item)&&item instanceof $window.File},isImage:function(file){var type="|"+file.type.slice(file.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}};return{restrict:"A",template:"<canvas/>",link:function(scope,element,attributes){function onLoadFile(event){var img=new Image;img.onload=onLoadImage,img.src=event.target.result}function onLoadImage(){var width=params.width||this.width/this.height*params.height,height=params.height||this.height/this.width*params.width;canvas.attr({width:width,height:height}),canvas[0].getContext("2d").drawImage(this,0,0,width,height)}if(helper.support){var params=scope.$eval(attributes.ngThumb);if(!helper.isFile(params.file))return void console.log("param file is no file");if(!helper.isImage(params.file))return void console.log("param file is no image");console.log("params.file",params.file);var canvas=element.find("canvas"),reader=new FileReader;reader.onload=onLoadFile,reader.readAsDataURL(params.file)}}}}]),jumplink.cms.directive("resize",["$rootScope","$window","$timeout",function($rootScope,$window,$timeout){return function(scope,element){var setStyle=function(newValue){scope.style=function(style){return"undefined"==typeof style&&(style={}),style.height=newValue.h+"px",style.width=newValue.w+"px",style}};scope.$watch($rootScope.getWindowDimensions,function(newValue,oldValue){setStyle(newValue),$timeout(function(){scope.$apply()})},!0)}}]),angular.module("webodf",[]).directive("webodfview",["$compile","$window","$sailsSocket","$async",function($compile,$window,$sailsSocket,$async){var createBlob=function(type,data,callback){if(window.File&&window.FileReader&&window.FileList&&window.Blob){var blob=new Blob([data.buffer],{type:"application/vnd.oasis.opendocument."+type});callback(null,blob)}else callback("The File APIs are not fully supported in this browser.")},downloadBlobAs=function(filename,type,data,callback){createBlob(type,data,function(error,blob){error?callback(error):(window.saveAs(blob,filename),callback(null))})},uploadBlobAs=function(folder,filename,type,data,callback){var formData,req,path,resInfo;createBlob(type,data,function(error,blob){error?callback(error):(formData=new FormData,formData.append("documents",blob,filename),req=new XMLHttpRequest,path=folder+"/"+filename,req.open("PUT",path),req.send(formData),req.onload=function(res){resInfo=JSON.parse(req.responseText),callback(null,resInfo)})})},downloadAs=function(odfContainer,filename,callback){odfContainer.createByteArray(function(data){downloadBlobAs(filename,odfContainer.getDocumentType(),data,callback)})},uploadAs=function(odfContainer,folder,filename,callback){odfContainer.createByteArray(function(data){uploadBlobAs(folder,filename,odfContainer.getDocumentType(),data,callback)})},getUserFieldElements=function(odfParentNodeElement,callback){var textns="urn:oasis:names:tc:opendocument:xmlns:text:1.0",userFieldsGet=odfParentNodeElement.getElementsByTagNameNS(textns,"user-field-get"),userFieldsDecl=odfParentNodeElement.getElementsByTagNameNS(textns,"user-field-decls")[0].childNodes;return angular.isFunction(callback)&&callback(null,{get:userFieldsGet,decl:userFieldsDecl}),{get:userFieldsGet,decl:userFieldsDecl}},updateUserFieldGetElement=function(userFieldGetNodeElements,name,value,callback){for(var founds=0,i=0;i<userFieldGetNodeElements.length;i++){var element=userFieldGetNodeElements[i],currentName=element.getAttribute("text:name");currentName===name&&(element.textContent=value,founds++)}return angular.isFunction(callback)&&callback(founds,userFieldGetNodeElements),founds},updateUserFieldDeclElement=function(userFieldDeclNodeElements,name,value,callback){for(var error,notFound=!0,i=0;i<userFieldDeclNodeElements.length;i++){var element=userFieldDeclNodeElements[i],currentName=element.getAttribute("text:name"),type=element.getAttribute("office:value-type");if(currentName===name)switch(notFound=!1,type){case"float":element.setAttribute("office:value",value);break;case"string":element.setAttribute("office:"+type+"-value",value);break;case"time":element.setAttribute("office:"+type+"-value",value);break;default:element.setAttribute("office:"+type+"-value",value)}}return notFound&&(error=name+" not found"),callback&&callback(error,userFieldDeclNodeElements),error},updateUserFieldElement=function(userFieldNodeElements,name,value,callback){var error,curValue;"undefined"!=typeof value&&null!==value?(curValue="undefined"!=typeof value.human?value.human:value,updateUserFieldDeclElement(userFieldNodeElements.decl,name,curValue,function(error,userFieldDeclNodeElements){return error?(callback&&callback(error),error):void updateUserFieldGetElement(userFieldNodeElements.get,name,curValue,function(founds,userFieldGetNodeElements){callback(null,{get:userFieldGetNodeElements,decl:userFieldDeclNodeElements})})})):(error="value not set: "+name,callback(error))},initializeWidth=function(odfCanvas,element){var paddingLeft=0,paddingRight=0,clientWidth=0,innerWidth=0;window&&(paddingLeft=parseInt(window.getComputedStyle(element.parent()[0],null).getPropertyValue("padding-left")),paddingRight=parseInt(window.getComputedStyle(element.parent()[0],null).getPropertyValue("padding-right"))),clientWidth=element.parent()[0].clientWidth,innerWidth=clientWidth-paddingLeft-paddingRight,odfCanvas.fitSmart(innerWidth)},updateDocument=function(odfContentNodeElement,data,callback){var userFieldNodeElements=getUserFieldElements(odfContentNodeElement);data&&$async.objectMap(data,function(data,callback){var key=Object.keys(data)[0];switch(key){case"bank":$async.objectMap(data.bank,function(data,callback){var subkey=Object.keys(data)[0];updateUserFieldElement(userFieldNodeElements,key+"."+subkey,data[subkey],function(error){callback(error,data)})},callback);break;default:updateUserFieldElement(userFieldNodeElements,key,data[key],function(error){callback(error,data)})}},callback)};return{restrict:"E",scope:{file:"@",invoice:"=",upload:"=",refresh:"=",ready:"=",download:"="},link:function($scope,$element,$attrs){var nid,odfCanvas,odfContentNodeElement,odfContainer;nid="odt"+Math.floor(100*Math.random()+1),$element.attr("id",nid),odfCanvas=new odf.OdfCanvas($element[0]),odfCanvas.load($scope.file),$scope.upload=function(callback){uploadAs(odfContainer,"/document/upload","new.odt",callback)},$scope.download=function(name){downloadAs(odfContainer,name,function(error){error&&console.log(error)})},$scope.refresh=function(callback){updateDocument(odfContentNodeElement,$scope.invoice,callback)},angular.element($window).bind("resize",function(){initializeWidth(odfCanvas,$element)}),odfCanvas.addListener("statereadychange",function(){odfCanvas.refreshSize(),initializeWidth(odfCanvas,$element),odfContainer=odfCanvas.odfContainer(),odfContentNodeElement=odfContainer.getContentElement(),$scope.ready()})}}}]);
//# sourceMappingURL=app.js.map
